#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_7764470520729401396) {
   out_7764470520729401396[0] = 0;
   out_7764470520729401396[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_7764470520729401396[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_7764470520729401396[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_7764470520729401396[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_7764470520729401396[5] = -sin(in_vec[1]);
   out_7764470520729401396[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7764470520729401396[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7764470520729401396[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_7764470520729401396[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_7764470520729401396[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_7764470520729401396[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_7764470520729401396[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7764470520729401396[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7764470520729401396[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_7764470520729401396[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_7764470520729401396[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_7764470520729401396[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_2761022508896775024) {
   out_2761022508896775024[0] = delta_x[0] + nom_x[0];
   out_2761022508896775024[1] = delta_x[1] + nom_x[1];
   out_2761022508896775024[2] = delta_x[2] + nom_x[2];
   out_2761022508896775024[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_2761022508896775024[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_2761022508896775024[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_2761022508896775024[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_2761022508896775024[7] = delta_x[6] + nom_x[7];
   out_2761022508896775024[8] = delta_x[7] + nom_x[8];
   out_2761022508896775024[9] = delta_x[8] + nom_x[9];
   out_2761022508896775024[10] = delta_x[9] + nom_x[10];
   out_2761022508896775024[11] = delta_x[10] + nom_x[11];
   out_2761022508896775024[12] = delta_x[11] + nom_x[12];
   out_2761022508896775024[13] = delta_x[12] + nom_x[13];
   out_2761022508896775024[14] = delta_x[13] + nom_x[14];
   out_2761022508896775024[15] = delta_x[14] + nom_x[15];
   out_2761022508896775024[16] = delta_x[15] + nom_x[16];
   out_2761022508896775024[17] = delta_x[16] + nom_x[17];
   out_2761022508896775024[18] = delta_x[17] + nom_x[18];
   out_2761022508896775024[19] = delta_x[18] + nom_x[19];
   out_2761022508896775024[20] = delta_x[19] + nom_x[20];
   out_2761022508896775024[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_578264965021430493) {
   out_578264965021430493[0] = -nom_x[0] + true_x[0];
   out_578264965021430493[1] = -nom_x[1] + true_x[1];
   out_578264965021430493[2] = -nom_x[2] + true_x[2];
   out_578264965021430493[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_578264965021430493[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_578264965021430493[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_578264965021430493[6] = -nom_x[7] + true_x[7];
   out_578264965021430493[7] = -nom_x[8] + true_x[8];
   out_578264965021430493[8] = -nom_x[9] + true_x[9];
   out_578264965021430493[9] = -nom_x[10] + true_x[10];
   out_578264965021430493[10] = -nom_x[11] + true_x[11];
   out_578264965021430493[11] = -nom_x[12] + true_x[12];
   out_578264965021430493[12] = -nom_x[13] + true_x[13];
   out_578264965021430493[13] = -nom_x[14] + true_x[14];
   out_578264965021430493[14] = -nom_x[15] + true_x[15];
   out_578264965021430493[15] = -nom_x[16] + true_x[16];
   out_578264965021430493[16] = -nom_x[17] + true_x[17];
   out_578264965021430493[17] = -nom_x[18] + true_x[18];
   out_578264965021430493[18] = -nom_x[19] + true_x[19];
   out_578264965021430493[19] = -nom_x[20] + true_x[20];
   out_578264965021430493[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_8789625662652965991) {
   out_8789625662652965991[0] = 1.0;
   out_8789625662652965991[1] = 0;
   out_8789625662652965991[2] = 0;
   out_8789625662652965991[3] = 0;
   out_8789625662652965991[4] = 0;
   out_8789625662652965991[5] = 0;
   out_8789625662652965991[6] = 0;
   out_8789625662652965991[7] = 0;
   out_8789625662652965991[8] = 0;
   out_8789625662652965991[9] = 0;
   out_8789625662652965991[10] = 0;
   out_8789625662652965991[11] = 0;
   out_8789625662652965991[12] = 0;
   out_8789625662652965991[13] = 0;
   out_8789625662652965991[14] = 0;
   out_8789625662652965991[15] = 0;
   out_8789625662652965991[16] = 0;
   out_8789625662652965991[17] = 0;
   out_8789625662652965991[18] = 0;
   out_8789625662652965991[19] = 0;
   out_8789625662652965991[20] = 0;
   out_8789625662652965991[21] = 0;
   out_8789625662652965991[22] = 1.0;
   out_8789625662652965991[23] = 0;
   out_8789625662652965991[24] = 0;
   out_8789625662652965991[25] = 0;
   out_8789625662652965991[26] = 0;
   out_8789625662652965991[27] = 0;
   out_8789625662652965991[28] = 0;
   out_8789625662652965991[29] = 0;
   out_8789625662652965991[30] = 0;
   out_8789625662652965991[31] = 0;
   out_8789625662652965991[32] = 0;
   out_8789625662652965991[33] = 0;
   out_8789625662652965991[34] = 0;
   out_8789625662652965991[35] = 0;
   out_8789625662652965991[36] = 0;
   out_8789625662652965991[37] = 0;
   out_8789625662652965991[38] = 0;
   out_8789625662652965991[39] = 0;
   out_8789625662652965991[40] = 0;
   out_8789625662652965991[41] = 0;
   out_8789625662652965991[42] = 0;
   out_8789625662652965991[43] = 0;
   out_8789625662652965991[44] = 1.0;
   out_8789625662652965991[45] = 0;
   out_8789625662652965991[46] = 0;
   out_8789625662652965991[47] = 0;
   out_8789625662652965991[48] = 0;
   out_8789625662652965991[49] = 0;
   out_8789625662652965991[50] = 0;
   out_8789625662652965991[51] = 0;
   out_8789625662652965991[52] = 0;
   out_8789625662652965991[53] = 0;
   out_8789625662652965991[54] = 0;
   out_8789625662652965991[55] = 0;
   out_8789625662652965991[56] = 0;
   out_8789625662652965991[57] = 0;
   out_8789625662652965991[58] = 0;
   out_8789625662652965991[59] = 0;
   out_8789625662652965991[60] = 0;
   out_8789625662652965991[61] = 0;
   out_8789625662652965991[62] = 0;
   out_8789625662652965991[63] = 0;
   out_8789625662652965991[64] = 0;
   out_8789625662652965991[65] = 0;
   out_8789625662652965991[66] = -0.5*state[4];
   out_8789625662652965991[67] = -0.5*state[5];
   out_8789625662652965991[68] = -0.5*state[6];
   out_8789625662652965991[69] = 0;
   out_8789625662652965991[70] = 0;
   out_8789625662652965991[71] = 0;
   out_8789625662652965991[72] = 0;
   out_8789625662652965991[73] = 0;
   out_8789625662652965991[74] = 0;
   out_8789625662652965991[75] = 0;
   out_8789625662652965991[76] = 0;
   out_8789625662652965991[77] = 0;
   out_8789625662652965991[78] = 0;
   out_8789625662652965991[79] = 0;
   out_8789625662652965991[80] = 0;
   out_8789625662652965991[81] = 0;
   out_8789625662652965991[82] = 0;
   out_8789625662652965991[83] = 0;
   out_8789625662652965991[84] = 0;
   out_8789625662652965991[85] = 0;
   out_8789625662652965991[86] = 0;
   out_8789625662652965991[87] = 0.5*state[3];
   out_8789625662652965991[88] = 0.5*state[6];
   out_8789625662652965991[89] = -0.5*state[5];
   out_8789625662652965991[90] = 0;
   out_8789625662652965991[91] = 0;
   out_8789625662652965991[92] = 0;
   out_8789625662652965991[93] = 0;
   out_8789625662652965991[94] = 0;
   out_8789625662652965991[95] = 0;
   out_8789625662652965991[96] = 0;
   out_8789625662652965991[97] = 0;
   out_8789625662652965991[98] = 0;
   out_8789625662652965991[99] = 0;
   out_8789625662652965991[100] = 0;
   out_8789625662652965991[101] = 0;
   out_8789625662652965991[102] = 0;
   out_8789625662652965991[103] = 0;
   out_8789625662652965991[104] = 0;
   out_8789625662652965991[105] = 0;
   out_8789625662652965991[106] = 0;
   out_8789625662652965991[107] = 0;
   out_8789625662652965991[108] = -0.5*state[6];
   out_8789625662652965991[109] = 0.5*state[3];
   out_8789625662652965991[110] = 0.5*state[4];
   out_8789625662652965991[111] = 0;
   out_8789625662652965991[112] = 0;
   out_8789625662652965991[113] = 0;
   out_8789625662652965991[114] = 0;
   out_8789625662652965991[115] = 0;
   out_8789625662652965991[116] = 0;
   out_8789625662652965991[117] = 0;
   out_8789625662652965991[118] = 0;
   out_8789625662652965991[119] = 0;
   out_8789625662652965991[120] = 0;
   out_8789625662652965991[121] = 0;
   out_8789625662652965991[122] = 0;
   out_8789625662652965991[123] = 0;
   out_8789625662652965991[124] = 0;
   out_8789625662652965991[125] = 0;
   out_8789625662652965991[126] = 0;
   out_8789625662652965991[127] = 0;
   out_8789625662652965991[128] = 0;
   out_8789625662652965991[129] = 0.5*state[5];
   out_8789625662652965991[130] = -0.5*state[4];
   out_8789625662652965991[131] = 0.5*state[3];
   out_8789625662652965991[132] = 0;
   out_8789625662652965991[133] = 0;
   out_8789625662652965991[134] = 0;
   out_8789625662652965991[135] = 0;
   out_8789625662652965991[136] = 0;
   out_8789625662652965991[137] = 0;
   out_8789625662652965991[138] = 0;
   out_8789625662652965991[139] = 0;
   out_8789625662652965991[140] = 0;
   out_8789625662652965991[141] = 0;
   out_8789625662652965991[142] = 0;
   out_8789625662652965991[143] = 0;
   out_8789625662652965991[144] = 0;
   out_8789625662652965991[145] = 0;
   out_8789625662652965991[146] = 0;
   out_8789625662652965991[147] = 0;
   out_8789625662652965991[148] = 0;
   out_8789625662652965991[149] = 0;
   out_8789625662652965991[150] = 0;
   out_8789625662652965991[151] = 0;
   out_8789625662652965991[152] = 0;
   out_8789625662652965991[153] = 1.0;
   out_8789625662652965991[154] = 0;
   out_8789625662652965991[155] = 0;
   out_8789625662652965991[156] = 0;
   out_8789625662652965991[157] = 0;
   out_8789625662652965991[158] = 0;
   out_8789625662652965991[159] = 0;
   out_8789625662652965991[160] = 0;
   out_8789625662652965991[161] = 0;
   out_8789625662652965991[162] = 0;
   out_8789625662652965991[163] = 0;
   out_8789625662652965991[164] = 0;
   out_8789625662652965991[165] = 0;
   out_8789625662652965991[166] = 0;
   out_8789625662652965991[167] = 0;
   out_8789625662652965991[168] = 0;
   out_8789625662652965991[169] = 0;
   out_8789625662652965991[170] = 0;
   out_8789625662652965991[171] = 0;
   out_8789625662652965991[172] = 0;
   out_8789625662652965991[173] = 0;
   out_8789625662652965991[174] = 0;
   out_8789625662652965991[175] = 1.0;
   out_8789625662652965991[176] = 0;
   out_8789625662652965991[177] = 0;
   out_8789625662652965991[178] = 0;
   out_8789625662652965991[179] = 0;
   out_8789625662652965991[180] = 0;
   out_8789625662652965991[181] = 0;
   out_8789625662652965991[182] = 0;
   out_8789625662652965991[183] = 0;
   out_8789625662652965991[184] = 0;
   out_8789625662652965991[185] = 0;
   out_8789625662652965991[186] = 0;
   out_8789625662652965991[187] = 0;
   out_8789625662652965991[188] = 0;
   out_8789625662652965991[189] = 0;
   out_8789625662652965991[190] = 0;
   out_8789625662652965991[191] = 0;
   out_8789625662652965991[192] = 0;
   out_8789625662652965991[193] = 0;
   out_8789625662652965991[194] = 0;
   out_8789625662652965991[195] = 0;
   out_8789625662652965991[196] = 0;
   out_8789625662652965991[197] = 1.0;
   out_8789625662652965991[198] = 0;
   out_8789625662652965991[199] = 0;
   out_8789625662652965991[200] = 0;
   out_8789625662652965991[201] = 0;
   out_8789625662652965991[202] = 0;
   out_8789625662652965991[203] = 0;
   out_8789625662652965991[204] = 0;
   out_8789625662652965991[205] = 0;
   out_8789625662652965991[206] = 0;
   out_8789625662652965991[207] = 0;
   out_8789625662652965991[208] = 0;
   out_8789625662652965991[209] = 0;
   out_8789625662652965991[210] = 0;
   out_8789625662652965991[211] = 0;
   out_8789625662652965991[212] = 0;
   out_8789625662652965991[213] = 0;
   out_8789625662652965991[214] = 0;
   out_8789625662652965991[215] = 0;
   out_8789625662652965991[216] = 0;
   out_8789625662652965991[217] = 0;
   out_8789625662652965991[218] = 0;
   out_8789625662652965991[219] = 1.0;
   out_8789625662652965991[220] = 0;
   out_8789625662652965991[221] = 0;
   out_8789625662652965991[222] = 0;
   out_8789625662652965991[223] = 0;
   out_8789625662652965991[224] = 0;
   out_8789625662652965991[225] = 0;
   out_8789625662652965991[226] = 0;
   out_8789625662652965991[227] = 0;
   out_8789625662652965991[228] = 0;
   out_8789625662652965991[229] = 0;
   out_8789625662652965991[230] = 0;
   out_8789625662652965991[231] = 0;
   out_8789625662652965991[232] = 0;
   out_8789625662652965991[233] = 0;
   out_8789625662652965991[234] = 0;
   out_8789625662652965991[235] = 0;
   out_8789625662652965991[236] = 0;
   out_8789625662652965991[237] = 0;
   out_8789625662652965991[238] = 0;
   out_8789625662652965991[239] = 0;
   out_8789625662652965991[240] = 0;
   out_8789625662652965991[241] = 1.0;
   out_8789625662652965991[242] = 0;
   out_8789625662652965991[243] = 0;
   out_8789625662652965991[244] = 0;
   out_8789625662652965991[245] = 0;
   out_8789625662652965991[246] = 0;
   out_8789625662652965991[247] = 0;
   out_8789625662652965991[248] = 0;
   out_8789625662652965991[249] = 0;
   out_8789625662652965991[250] = 0;
   out_8789625662652965991[251] = 0;
   out_8789625662652965991[252] = 0;
   out_8789625662652965991[253] = 0;
   out_8789625662652965991[254] = 0;
   out_8789625662652965991[255] = 0;
   out_8789625662652965991[256] = 0;
   out_8789625662652965991[257] = 0;
   out_8789625662652965991[258] = 0;
   out_8789625662652965991[259] = 0;
   out_8789625662652965991[260] = 0;
   out_8789625662652965991[261] = 0;
   out_8789625662652965991[262] = 0;
   out_8789625662652965991[263] = 1.0;
   out_8789625662652965991[264] = 0;
   out_8789625662652965991[265] = 0;
   out_8789625662652965991[266] = 0;
   out_8789625662652965991[267] = 0;
   out_8789625662652965991[268] = 0;
   out_8789625662652965991[269] = 0;
   out_8789625662652965991[270] = 0;
   out_8789625662652965991[271] = 0;
   out_8789625662652965991[272] = 0;
   out_8789625662652965991[273] = 0;
   out_8789625662652965991[274] = 0;
   out_8789625662652965991[275] = 0;
   out_8789625662652965991[276] = 0;
   out_8789625662652965991[277] = 0;
   out_8789625662652965991[278] = 0;
   out_8789625662652965991[279] = 0;
   out_8789625662652965991[280] = 0;
   out_8789625662652965991[281] = 0;
   out_8789625662652965991[282] = 0;
   out_8789625662652965991[283] = 0;
   out_8789625662652965991[284] = 0;
   out_8789625662652965991[285] = 1.0;
   out_8789625662652965991[286] = 0;
   out_8789625662652965991[287] = 0;
   out_8789625662652965991[288] = 0;
   out_8789625662652965991[289] = 0;
   out_8789625662652965991[290] = 0;
   out_8789625662652965991[291] = 0;
   out_8789625662652965991[292] = 0;
   out_8789625662652965991[293] = 0;
   out_8789625662652965991[294] = 0;
   out_8789625662652965991[295] = 0;
   out_8789625662652965991[296] = 0;
   out_8789625662652965991[297] = 0;
   out_8789625662652965991[298] = 0;
   out_8789625662652965991[299] = 0;
   out_8789625662652965991[300] = 0;
   out_8789625662652965991[301] = 0;
   out_8789625662652965991[302] = 0;
   out_8789625662652965991[303] = 0;
   out_8789625662652965991[304] = 0;
   out_8789625662652965991[305] = 0;
   out_8789625662652965991[306] = 0;
   out_8789625662652965991[307] = 1.0;
   out_8789625662652965991[308] = 0;
   out_8789625662652965991[309] = 0;
   out_8789625662652965991[310] = 0;
   out_8789625662652965991[311] = 0;
   out_8789625662652965991[312] = 0;
   out_8789625662652965991[313] = 0;
   out_8789625662652965991[314] = 0;
   out_8789625662652965991[315] = 0;
   out_8789625662652965991[316] = 0;
   out_8789625662652965991[317] = 0;
   out_8789625662652965991[318] = 0;
   out_8789625662652965991[319] = 0;
   out_8789625662652965991[320] = 0;
   out_8789625662652965991[321] = 0;
   out_8789625662652965991[322] = 0;
   out_8789625662652965991[323] = 0;
   out_8789625662652965991[324] = 0;
   out_8789625662652965991[325] = 0;
   out_8789625662652965991[326] = 0;
   out_8789625662652965991[327] = 0;
   out_8789625662652965991[328] = 0;
   out_8789625662652965991[329] = 1.0;
   out_8789625662652965991[330] = 0;
   out_8789625662652965991[331] = 0;
   out_8789625662652965991[332] = 0;
   out_8789625662652965991[333] = 0;
   out_8789625662652965991[334] = 0;
   out_8789625662652965991[335] = 0;
   out_8789625662652965991[336] = 0;
   out_8789625662652965991[337] = 0;
   out_8789625662652965991[338] = 0;
   out_8789625662652965991[339] = 0;
   out_8789625662652965991[340] = 0;
   out_8789625662652965991[341] = 0;
   out_8789625662652965991[342] = 0;
   out_8789625662652965991[343] = 0;
   out_8789625662652965991[344] = 0;
   out_8789625662652965991[345] = 0;
   out_8789625662652965991[346] = 0;
   out_8789625662652965991[347] = 0;
   out_8789625662652965991[348] = 0;
   out_8789625662652965991[349] = 0;
   out_8789625662652965991[350] = 0;
   out_8789625662652965991[351] = 1.0;
   out_8789625662652965991[352] = 0;
   out_8789625662652965991[353] = 0;
   out_8789625662652965991[354] = 0;
   out_8789625662652965991[355] = 0;
   out_8789625662652965991[356] = 0;
   out_8789625662652965991[357] = 0;
   out_8789625662652965991[358] = 0;
   out_8789625662652965991[359] = 0;
   out_8789625662652965991[360] = 0;
   out_8789625662652965991[361] = 0;
   out_8789625662652965991[362] = 0;
   out_8789625662652965991[363] = 0;
   out_8789625662652965991[364] = 0;
   out_8789625662652965991[365] = 0;
   out_8789625662652965991[366] = 0;
   out_8789625662652965991[367] = 0;
   out_8789625662652965991[368] = 0;
   out_8789625662652965991[369] = 0;
   out_8789625662652965991[370] = 0;
   out_8789625662652965991[371] = 0;
   out_8789625662652965991[372] = 0;
   out_8789625662652965991[373] = 1.0;
   out_8789625662652965991[374] = 0;
   out_8789625662652965991[375] = 0;
   out_8789625662652965991[376] = 0;
   out_8789625662652965991[377] = 0;
   out_8789625662652965991[378] = 0;
   out_8789625662652965991[379] = 0;
   out_8789625662652965991[380] = 0;
   out_8789625662652965991[381] = 0;
   out_8789625662652965991[382] = 0;
   out_8789625662652965991[383] = 0;
   out_8789625662652965991[384] = 0;
   out_8789625662652965991[385] = 0;
   out_8789625662652965991[386] = 0;
   out_8789625662652965991[387] = 0;
   out_8789625662652965991[388] = 0;
   out_8789625662652965991[389] = 0;
   out_8789625662652965991[390] = 0;
   out_8789625662652965991[391] = 0;
   out_8789625662652965991[392] = 0;
   out_8789625662652965991[393] = 0;
   out_8789625662652965991[394] = 0;
   out_8789625662652965991[395] = 1.0;
   out_8789625662652965991[396] = 0;
   out_8789625662652965991[397] = 0;
   out_8789625662652965991[398] = 0;
   out_8789625662652965991[399] = 0;
   out_8789625662652965991[400] = 0;
   out_8789625662652965991[401] = 0;
   out_8789625662652965991[402] = 0;
   out_8789625662652965991[403] = 0;
   out_8789625662652965991[404] = 0;
   out_8789625662652965991[405] = 0;
   out_8789625662652965991[406] = 0;
   out_8789625662652965991[407] = 0;
   out_8789625662652965991[408] = 0;
   out_8789625662652965991[409] = 0;
   out_8789625662652965991[410] = 0;
   out_8789625662652965991[411] = 0;
   out_8789625662652965991[412] = 0;
   out_8789625662652965991[413] = 0;
   out_8789625662652965991[414] = 0;
   out_8789625662652965991[415] = 0;
   out_8789625662652965991[416] = 0;
   out_8789625662652965991[417] = 1.0;
   out_8789625662652965991[418] = 0;
   out_8789625662652965991[419] = 0;
   out_8789625662652965991[420] = 0;
   out_8789625662652965991[421] = 0;
   out_8789625662652965991[422] = 0;
   out_8789625662652965991[423] = 0;
   out_8789625662652965991[424] = 0;
   out_8789625662652965991[425] = 0;
   out_8789625662652965991[426] = 0;
   out_8789625662652965991[427] = 0;
   out_8789625662652965991[428] = 0;
   out_8789625662652965991[429] = 0;
   out_8789625662652965991[430] = 0;
   out_8789625662652965991[431] = 0;
   out_8789625662652965991[432] = 0;
   out_8789625662652965991[433] = 0;
   out_8789625662652965991[434] = 0;
   out_8789625662652965991[435] = 0;
   out_8789625662652965991[436] = 0;
   out_8789625662652965991[437] = 0;
   out_8789625662652965991[438] = 0;
   out_8789625662652965991[439] = 1.0;
   out_8789625662652965991[440] = 0;
   out_8789625662652965991[441] = 0;
   out_8789625662652965991[442] = 0;
   out_8789625662652965991[443] = 0;
   out_8789625662652965991[444] = 0;
   out_8789625662652965991[445] = 0;
   out_8789625662652965991[446] = 0;
   out_8789625662652965991[447] = 0;
   out_8789625662652965991[448] = 0;
   out_8789625662652965991[449] = 0;
   out_8789625662652965991[450] = 0;
   out_8789625662652965991[451] = 0;
   out_8789625662652965991[452] = 0;
   out_8789625662652965991[453] = 0;
   out_8789625662652965991[454] = 0;
   out_8789625662652965991[455] = 0;
   out_8789625662652965991[456] = 0;
   out_8789625662652965991[457] = 0;
   out_8789625662652965991[458] = 0;
   out_8789625662652965991[459] = 0;
   out_8789625662652965991[460] = 0;
   out_8789625662652965991[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_4797993169837165730) {
   out_4797993169837165730[0] = dt*state[7] + state[0];
   out_4797993169837165730[1] = dt*state[8] + state[1];
   out_4797993169837165730[2] = dt*state[9] + state[2];
   out_4797993169837165730[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_4797993169837165730[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_4797993169837165730[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_4797993169837165730[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_4797993169837165730[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_4797993169837165730[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_4797993169837165730[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_4797993169837165730[10] = state[10];
   out_4797993169837165730[11] = state[11];
   out_4797993169837165730[12] = state[12];
   out_4797993169837165730[13] = state[13];
   out_4797993169837165730[14] = state[14];
   out_4797993169837165730[15] = state[15];
   out_4797993169837165730[16] = state[16];
   out_4797993169837165730[17] = state[17];
   out_4797993169837165730[18] = state[18];
   out_4797993169837165730[19] = state[19];
   out_4797993169837165730[20] = state[20];
   out_4797993169837165730[21] = state[21];
}
void F_fun(double *state, double dt, double *out_3757987011767936423) {
   out_3757987011767936423[0] = 1;
   out_3757987011767936423[1] = 0;
   out_3757987011767936423[2] = 0;
   out_3757987011767936423[3] = 0;
   out_3757987011767936423[4] = 0;
   out_3757987011767936423[5] = 0;
   out_3757987011767936423[6] = dt;
   out_3757987011767936423[7] = 0;
   out_3757987011767936423[8] = 0;
   out_3757987011767936423[9] = 0;
   out_3757987011767936423[10] = 0;
   out_3757987011767936423[11] = 0;
   out_3757987011767936423[12] = 0;
   out_3757987011767936423[13] = 0;
   out_3757987011767936423[14] = 0;
   out_3757987011767936423[15] = 0;
   out_3757987011767936423[16] = 0;
   out_3757987011767936423[17] = 0;
   out_3757987011767936423[18] = 0;
   out_3757987011767936423[19] = 0;
   out_3757987011767936423[20] = 0;
   out_3757987011767936423[21] = 0;
   out_3757987011767936423[22] = 1;
   out_3757987011767936423[23] = 0;
   out_3757987011767936423[24] = 0;
   out_3757987011767936423[25] = 0;
   out_3757987011767936423[26] = 0;
   out_3757987011767936423[27] = 0;
   out_3757987011767936423[28] = dt;
   out_3757987011767936423[29] = 0;
   out_3757987011767936423[30] = 0;
   out_3757987011767936423[31] = 0;
   out_3757987011767936423[32] = 0;
   out_3757987011767936423[33] = 0;
   out_3757987011767936423[34] = 0;
   out_3757987011767936423[35] = 0;
   out_3757987011767936423[36] = 0;
   out_3757987011767936423[37] = 0;
   out_3757987011767936423[38] = 0;
   out_3757987011767936423[39] = 0;
   out_3757987011767936423[40] = 0;
   out_3757987011767936423[41] = 0;
   out_3757987011767936423[42] = 0;
   out_3757987011767936423[43] = 0;
   out_3757987011767936423[44] = 1;
   out_3757987011767936423[45] = 0;
   out_3757987011767936423[46] = 0;
   out_3757987011767936423[47] = 0;
   out_3757987011767936423[48] = 0;
   out_3757987011767936423[49] = 0;
   out_3757987011767936423[50] = dt;
   out_3757987011767936423[51] = 0;
   out_3757987011767936423[52] = 0;
   out_3757987011767936423[53] = 0;
   out_3757987011767936423[54] = 0;
   out_3757987011767936423[55] = 0;
   out_3757987011767936423[56] = 0;
   out_3757987011767936423[57] = 0;
   out_3757987011767936423[58] = 0;
   out_3757987011767936423[59] = 0;
   out_3757987011767936423[60] = 0;
   out_3757987011767936423[61] = 0;
   out_3757987011767936423[62] = 0;
   out_3757987011767936423[63] = 0;
   out_3757987011767936423[64] = 0;
   out_3757987011767936423[65] = 0;
   out_3757987011767936423[66] = 1;
   out_3757987011767936423[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_3757987011767936423[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_3757987011767936423[69] = 0;
   out_3757987011767936423[70] = 0;
   out_3757987011767936423[71] = 0;
   out_3757987011767936423[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3757987011767936423[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3757987011767936423[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3757987011767936423[75] = 0;
   out_3757987011767936423[76] = 0;
   out_3757987011767936423[77] = 0;
   out_3757987011767936423[78] = 0;
   out_3757987011767936423[79] = 0;
   out_3757987011767936423[80] = 0;
   out_3757987011767936423[81] = 0;
   out_3757987011767936423[82] = 0;
   out_3757987011767936423[83] = 0;
   out_3757987011767936423[84] = 0;
   out_3757987011767936423[85] = 0;
   out_3757987011767936423[86] = 0;
   out_3757987011767936423[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_3757987011767936423[88] = 1;
   out_3757987011767936423[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_3757987011767936423[90] = 0;
   out_3757987011767936423[91] = 0;
   out_3757987011767936423[92] = 0;
   out_3757987011767936423[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3757987011767936423[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3757987011767936423[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3757987011767936423[96] = 0;
   out_3757987011767936423[97] = 0;
   out_3757987011767936423[98] = 0;
   out_3757987011767936423[99] = 0;
   out_3757987011767936423[100] = 0;
   out_3757987011767936423[101] = 0;
   out_3757987011767936423[102] = 0;
   out_3757987011767936423[103] = 0;
   out_3757987011767936423[104] = 0;
   out_3757987011767936423[105] = 0;
   out_3757987011767936423[106] = 0;
   out_3757987011767936423[107] = 0;
   out_3757987011767936423[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_3757987011767936423[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_3757987011767936423[110] = 1;
   out_3757987011767936423[111] = 0;
   out_3757987011767936423[112] = 0;
   out_3757987011767936423[113] = 0;
   out_3757987011767936423[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3757987011767936423[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3757987011767936423[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3757987011767936423[117] = 0;
   out_3757987011767936423[118] = 0;
   out_3757987011767936423[119] = 0;
   out_3757987011767936423[120] = 0;
   out_3757987011767936423[121] = 0;
   out_3757987011767936423[122] = 0;
   out_3757987011767936423[123] = 0;
   out_3757987011767936423[124] = 0;
   out_3757987011767936423[125] = 0;
   out_3757987011767936423[126] = 0;
   out_3757987011767936423[127] = 0;
   out_3757987011767936423[128] = 0;
   out_3757987011767936423[129] = 0;
   out_3757987011767936423[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_3757987011767936423[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_3757987011767936423[132] = 1;
   out_3757987011767936423[133] = 0;
   out_3757987011767936423[134] = 0;
   out_3757987011767936423[135] = 0;
   out_3757987011767936423[136] = 0;
   out_3757987011767936423[137] = 0;
   out_3757987011767936423[138] = 0;
   out_3757987011767936423[139] = 0;
   out_3757987011767936423[140] = 0;
   out_3757987011767936423[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3757987011767936423[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3757987011767936423[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3757987011767936423[144] = 0;
   out_3757987011767936423[145] = 0;
   out_3757987011767936423[146] = 0;
   out_3757987011767936423[147] = 0;
   out_3757987011767936423[148] = 0;
   out_3757987011767936423[149] = 0;
   out_3757987011767936423[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_3757987011767936423[151] = 0;
   out_3757987011767936423[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_3757987011767936423[153] = 0;
   out_3757987011767936423[154] = 1;
   out_3757987011767936423[155] = 0;
   out_3757987011767936423[156] = 0;
   out_3757987011767936423[157] = 0;
   out_3757987011767936423[158] = 0;
   out_3757987011767936423[159] = 0;
   out_3757987011767936423[160] = 0;
   out_3757987011767936423[161] = 0;
   out_3757987011767936423[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3757987011767936423[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3757987011767936423[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3757987011767936423[165] = 0;
   out_3757987011767936423[166] = 0;
   out_3757987011767936423[167] = 0;
   out_3757987011767936423[168] = 0;
   out_3757987011767936423[169] = 0;
   out_3757987011767936423[170] = 0;
   out_3757987011767936423[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_3757987011767936423[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_3757987011767936423[173] = 0;
   out_3757987011767936423[174] = 0;
   out_3757987011767936423[175] = 0;
   out_3757987011767936423[176] = 1;
   out_3757987011767936423[177] = 0;
   out_3757987011767936423[178] = 0;
   out_3757987011767936423[179] = 0;
   out_3757987011767936423[180] = 0;
   out_3757987011767936423[181] = 0;
   out_3757987011767936423[182] = 0;
   out_3757987011767936423[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3757987011767936423[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3757987011767936423[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3757987011767936423[186] = 0;
   out_3757987011767936423[187] = 0;
   out_3757987011767936423[188] = 0;
   out_3757987011767936423[189] = 0;
   out_3757987011767936423[190] = 0;
   out_3757987011767936423[191] = 0;
   out_3757987011767936423[192] = 0;
   out_3757987011767936423[193] = 0;
   out_3757987011767936423[194] = 0;
   out_3757987011767936423[195] = 0;
   out_3757987011767936423[196] = 0;
   out_3757987011767936423[197] = 0;
   out_3757987011767936423[198] = 1;
   out_3757987011767936423[199] = 0;
   out_3757987011767936423[200] = 0;
   out_3757987011767936423[201] = 0;
   out_3757987011767936423[202] = 0;
   out_3757987011767936423[203] = 0;
   out_3757987011767936423[204] = 0;
   out_3757987011767936423[205] = 0;
   out_3757987011767936423[206] = 0;
   out_3757987011767936423[207] = 0;
   out_3757987011767936423[208] = 0;
   out_3757987011767936423[209] = 0;
   out_3757987011767936423[210] = 0;
   out_3757987011767936423[211] = 0;
   out_3757987011767936423[212] = 0;
   out_3757987011767936423[213] = 0;
   out_3757987011767936423[214] = 0;
   out_3757987011767936423[215] = 0;
   out_3757987011767936423[216] = 0;
   out_3757987011767936423[217] = 0;
   out_3757987011767936423[218] = 0;
   out_3757987011767936423[219] = 0;
   out_3757987011767936423[220] = 1;
   out_3757987011767936423[221] = 0;
   out_3757987011767936423[222] = 0;
   out_3757987011767936423[223] = 0;
   out_3757987011767936423[224] = 0;
   out_3757987011767936423[225] = 0;
   out_3757987011767936423[226] = 0;
   out_3757987011767936423[227] = 0;
   out_3757987011767936423[228] = 0;
   out_3757987011767936423[229] = 0;
   out_3757987011767936423[230] = 0;
   out_3757987011767936423[231] = 0;
   out_3757987011767936423[232] = 0;
   out_3757987011767936423[233] = 0;
   out_3757987011767936423[234] = 0;
   out_3757987011767936423[235] = 0;
   out_3757987011767936423[236] = 0;
   out_3757987011767936423[237] = 0;
   out_3757987011767936423[238] = 0;
   out_3757987011767936423[239] = 0;
   out_3757987011767936423[240] = 0;
   out_3757987011767936423[241] = 0;
   out_3757987011767936423[242] = 1;
   out_3757987011767936423[243] = 0;
   out_3757987011767936423[244] = 0;
   out_3757987011767936423[245] = 0;
   out_3757987011767936423[246] = 0;
   out_3757987011767936423[247] = 0;
   out_3757987011767936423[248] = 0;
   out_3757987011767936423[249] = 0;
   out_3757987011767936423[250] = 0;
   out_3757987011767936423[251] = 0;
   out_3757987011767936423[252] = 0;
   out_3757987011767936423[253] = 0;
   out_3757987011767936423[254] = 0;
   out_3757987011767936423[255] = 0;
   out_3757987011767936423[256] = 0;
   out_3757987011767936423[257] = 0;
   out_3757987011767936423[258] = 0;
   out_3757987011767936423[259] = 0;
   out_3757987011767936423[260] = 0;
   out_3757987011767936423[261] = 0;
   out_3757987011767936423[262] = 0;
   out_3757987011767936423[263] = 0;
   out_3757987011767936423[264] = 1;
   out_3757987011767936423[265] = 0;
   out_3757987011767936423[266] = 0;
   out_3757987011767936423[267] = 0;
   out_3757987011767936423[268] = 0;
   out_3757987011767936423[269] = 0;
   out_3757987011767936423[270] = 0;
   out_3757987011767936423[271] = 0;
   out_3757987011767936423[272] = 0;
   out_3757987011767936423[273] = 0;
   out_3757987011767936423[274] = 0;
   out_3757987011767936423[275] = 0;
   out_3757987011767936423[276] = 0;
   out_3757987011767936423[277] = 0;
   out_3757987011767936423[278] = 0;
   out_3757987011767936423[279] = 0;
   out_3757987011767936423[280] = 0;
   out_3757987011767936423[281] = 0;
   out_3757987011767936423[282] = 0;
   out_3757987011767936423[283] = 0;
   out_3757987011767936423[284] = 0;
   out_3757987011767936423[285] = 0;
   out_3757987011767936423[286] = 1;
   out_3757987011767936423[287] = 0;
   out_3757987011767936423[288] = 0;
   out_3757987011767936423[289] = 0;
   out_3757987011767936423[290] = 0;
   out_3757987011767936423[291] = 0;
   out_3757987011767936423[292] = 0;
   out_3757987011767936423[293] = 0;
   out_3757987011767936423[294] = 0;
   out_3757987011767936423[295] = 0;
   out_3757987011767936423[296] = 0;
   out_3757987011767936423[297] = 0;
   out_3757987011767936423[298] = 0;
   out_3757987011767936423[299] = 0;
   out_3757987011767936423[300] = 0;
   out_3757987011767936423[301] = 0;
   out_3757987011767936423[302] = 0;
   out_3757987011767936423[303] = 0;
   out_3757987011767936423[304] = 0;
   out_3757987011767936423[305] = 0;
   out_3757987011767936423[306] = 0;
   out_3757987011767936423[307] = 0;
   out_3757987011767936423[308] = 1;
   out_3757987011767936423[309] = 0;
   out_3757987011767936423[310] = 0;
   out_3757987011767936423[311] = 0;
   out_3757987011767936423[312] = 0;
   out_3757987011767936423[313] = 0;
   out_3757987011767936423[314] = 0;
   out_3757987011767936423[315] = 0;
   out_3757987011767936423[316] = 0;
   out_3757987011767936423[317] = 0;
   out_3757987011767936423[318] = 0;
   out_3757987011767936423[319] = 0;
   out_3757987011767936423[320] = 0;
   out_3757987011767936423[321] = 0;
   out_3757987011767936423[322] = 0;
   out_3757987011767936423[323] = 0;
   out_3757987011767936423[324] = 0;
   out_3757987011767936423[325] = 0;
   out_3757987011767936423[326] = 0;
   out_3757987011767936423[327] = 0;
   out_3757987011767936423[328] = 0;
   out_3757987011767936423[329] = 0;
   out_3757987011767936423[330] = 1;
   out_3757987011767936423[331] = 0;
   out_3757987011767936423[332] = 0;
   out_3757987011767936423[333] = 0;
   out_3757987011767936423[334] = 0;
   out_3757987011767936423[335] = 0;
   out_3757987011767936423[336] = 0;
   out_3757987011767936423[337] = 0;
   out_3757987011767936423[338] = 0;
   out_3757987011767936423[339] = 0;
   out_3757987011767936423[340] = 0;
   out_3757987011767936423[341] = 0;
   out_3757987011767936423[342] = 0;
   out_3757987011767936423[343] = 0;
   out_3757987011767936423[344] = 0;
   out_3757987011767936423[345] = 0;
   out_3757987011767936423[346] = 0;
   out_3757987011767936423[347] = 0;
   out_3757987011767936423[348] = 0;
   out_3757987011767936423[349] = 0;
   out_3757987011767936423[350] = 0;
   out_3757987011767936423[351] = 0;
   out_3757987011767936423[352] = 1;
   out_3757987011767936423[353] = 0;
   out_3757987011767936423[354] = 0;
   out_3757987011767936423[355] = 0;
   out_3757987011767936423[356] = 0;
   out_3757987011767936423[357] = 0;
   out_3757987011767936423[358] = 0;
   out_3757987011767936423[359] = 0;
   out_3757987011767936423[360] = 0;
   out_3757987011767936423[361] = 0;
   out_3757987011767936423[362] = 0;
   out_3757987011767936423[363] = 0;
   out_3757987011767936423[364] = 0;
   out_3757987011767936423[365] = 0;
   out_3757987011767936423[366] = 0;
   out_3757987011767936423[367] = 0;
   out_3757987011767936423[368] = 0;
   out_3757987011767936423[369] = 0;
   out_3757987011767936423[370] = 0;
   out_3757987011767936423[371] = 0;
   out_3757987011767936423[372] = 0;
   out_3757987011767936423[373] = 0;
   out_3757987011767936423[374] = 1;
   out_3757987011767936423[375] = 0;
   out_3757987011767936423[376] = 0;
   out_3757987011767936423[377] = 0;
   out_3757987011767936423[378] = 0;
   out_3757987011767936423[379] = 0;
   out_3757987011767936423[380] = 0;
   out_3757987011767936423[381] = 0;
   out_3757987011767936423[382] = 0;
   out_3757987011767936423[383] = 0;
   out_3757987011767936423[384] = 0;
   out_3757987011767936423[385] = 0;
   out_3757987011767936423[386] = 0;
   out_3757987011767936423[387] = 0;
   out_3757987011767936423[388] = 0;
   out_3757987011767936423[389] = 0;
   out_3757987011767936423[390] = 0;
   out_3757987011767936423[391] = 0;
   out_3757987011767936423[392] = 0;
   out_3757987011767936423[393] = 0;
   out_3757987011767936423[394] = 0;
   out_3757987011767936423[395] = 0;
   out_3757987011767936423[396] = 1;
   out_3757987011767936423[397] = 0;
   out_3757987011767936423[398] = 0;
   out_3757987011767936423[399] = 0;
   out_3757987011767936423[400] = 0;
   out_3757987011767936423[401] = 0;
   out_3757987011767936423[402] = 0;
   out_3757987011767936423[403] = 0;
   out_3757987011767936423[404] = 0;
   out_3757987011767936423[405] = 0;
   out_3757987011767936423[406] = 0;
   out_3757987011767936423[407] = 0;
   out_3757987011767936423[408] = 0;
   out_3757987011767936423[409] = 0;
   out_3757987011767936423[410] = 0;
   out_3757987011767936423[411] = 0;
   out_3757987011767936423[412] = 0;
   out_3757987011767936423[413] = 0;
   out_3757987011767936423[414] = 0;
   out_3757987011767936423[415] = 0;
   out_3757987011767936423[416] = 0;
   out_3757987011767936423[417] = 0;
   out_3757987011767936423[418] = 1;
   out_3757987011767936423[419] = 0;
   out_3757987011767936423[420] = 0;
   out_3757987011767936423[421] = 0;
   out_3757987011767936423[422] = 0;
   out_3757987011767936423[423] = 0;
   out_3757987011767936423[424] = 0;
   out_3757987011767936423[425] = 0;
   out_3757987011767936423[426] = 0;
   out_3757987011767936423[427] = 0;
   out_3757987011767936423[428] = 0;
   out_3757987011767936423[429] = 0;
   out_3757987011767936423[430] = 0;
   out_3757987011767936423[431] = 0;
   out_3757987011767936423[432] = 0;
   out_3757987011767936423[433] = 0;
   out_3757987011767936423[434] = 0;
   out_3757987011767936423[435] = 0;
   out_3757987011767936423[436] = 0;
   out_3757987011767936423[437] = 0;
   out_3757987011767936423[438] = 0;
   out_3757987011767936423[439] = 0;
   out_3757987011767936423[440] = 1;
}
void h_4(double *state, double *unused, double *out_3407413638906790451) {
   out_3407413638906790451[0] = state[10] + state[13];
   out_3407413638906790451[1] = state[11] + state[14];
   out_3407413638906790451[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_3182943212506910875) {
   out_3182943212506910875[0] = 0;
   out_3182943212506910875[1] = 0;
   out_3182943212506910875[2] = 0;
   out_3182943212506910875[3] = 0;
   out_3182943212506910875[4] = 0;
   out_3182943212506910875[5] = 0;
   out_3182943212506910875[6] = 0;
   out_3182943212506910875[7] = 0;
   out_3182943212506910875[8] = 0;
   out_3182943212506910875[9] = 0;
   out_3182943212506910875[10] = 1;
   out_3182943212506910875[11] = 0;
   out_3182943212506910875[12] = 0;
   out_3182943212506910875[13] = 1;
   out_3182943212506910875[14] = 0;
   out_3182943212506910875[15] = 0;
   out_3182943212506910875[16] = 0;
   out_3182943212506910875[17] = 0;
   out_3182943212506910875[18] = 0;
   out_3182943212506910875[19] = 0;
   out_3182943212506910875[20] = 0;
   out_3182943212506910875[21] = 0;
   out_3182943212506910875[22] = 0;
   out_3182943212506910875[23] = 0;
   out_3182943212506910875[24] = 0;
   out_3182943212506910875[25] = 0;
   out_3182943212506910875[26] = 0;
   out_3182943212506910875[27] = 0;
   out_3182943212506910875[28] = 0;
   out_3182943212506910875[29] = 0;
   out_3182943212506910875[30] = 0;
   out_3182943212506910875[31] = 0;
   out_3182943212506910875[32] = 0;
   out_3182943212506910875[33] = 1;
   out_3182943212506910875[34] = 0;
   out_3182943212506910875[35] = 0;
   out_3182943212506910875[36] = 1;
   out_3182943212506910875[37] = 0;
   out_3182943212506910875[38] = 0;
   out_3182943212506910875[39] = 0;
   out_3182943212506910875[40] = 0;
   out_3182943212506910875[41] = 0;
   out_3182943212506910875[42] = 0;
   out_3182943212506910875[43] = 0;
   out_3182943212506910875[44] = 0;
   out_3182943212506910875[45] = 0;
   out_3182943212506910875[46] = 0;
   out_3182943212506910875[47] = 0;
   out_3182943212506910875[48] = 0;
   out_3182943212506910875[49] = 0;
   out_3182943212506910875[50] = 0;
   out_3182943212506910875[51] = 0;
   out_3182943212506910875[52] = 0;
   out_3182943212506910875[53] = 0;
   out_3182943212506910875[54] = 0;
   out_3182943212506910875[55] = 0;
   out_3182943212506910875[56] = 1;
   out_3182943212506910875[57] = 0;
   out_3182943212506910875[58] = 0;
   out_3182943212506910875[59] = 1;
   out_3182943212506910875[60] = 0;
   out_3182943212506910875[61] = 0;
   out_3182943212506910875[62] = 0;
   out_3182943212506910875[63] = 0;
   out_3182943212506910875[64] = 0;
   out_3182943212506910875[65] = 0;
}
void h_9(double *state, double *unused, double *out_1785199206761257061) {
   out_1785199206761257061[0] = state[10];
   out_1785199206761257061[1] = state[11];
   out_1785199206761257061[2] = state[12];
}
void H_9(double *state, double *unused, double *out_3424132859136501520) {
   out_3424132859136501520[0] = 0;
   out_3424132859136501520[1] = 0;
   out_3424132859136501520[2] = 0;
   out_3424132859136501520[3] = 0;
   out_3424132859136501520[4] = 0;
   out_3424132859136501520[5] = 0;
   out_3424132859136501520[6] = 0;
   out_3424132859136501520[7] = 0;
   out_3424132859136501520[8] = 0;
   out_3424132859136501520[9] = 0;
   out_3424132859136501520[10] = 1;
   out_3424132859136501520[11] = 0;
   out_3424132859136501520[12] = 0;
   out_3424132859136501520[13] = 0;
   out_3424132859136501520[14] = 0;
   out_3424132859136501520[15] = 0;
   out_3424132859136501520[16] = 0;
   out_3424132859136501520[17] = 0;
   out_3424132859136501520[18] = 0;
   out_3424132859136501520[19] = 0;
   out_3424132859136501520[20] = 0;
   out_3424132859136501520[21] = 0;
   out_3424132859136501520[22] = 0;
   out_3424132859136501520[23] = 0;
   out_3424132859136501520[24] = 0;
   out_3424132859136501520[25] = 0;
   out_3424132859136501520[26] = 0;
   out_3424132859136501520[27] = 0;
   out_3424132859136501520[28] = 0;
   out_3424132859136501520[29] = 0;
   out_3424132859136501520[30] = 0;
   out_3424132859136501520[31] = 0;
   out_3424132859136501520[32] = 0;
   out_3424132859136501520[33] = 1;
   out_3424132859136501520[34] = 0;
   out_3424132859136501520[35] = 0;
   out_3424132859136501520[36] = 0;
   out_3424132859136501520[37] = 0;
   out_3424132859136501520[38] = 0;
   out_3424132859136501520[39] = 0;
   out_3424132859136501520[40] = 0;
   out_3424132859136501520[41] = 0;
   out_3424132859136501520[42] = 0;
   out_3424132859136501520[43] = 0;
   out_3424132859136501520[44] = 0;
   out_3424132859136501520[45] = 0;
   out_3424132859136501520[46] = 0;
   out_3424132859136501520[47] = 0;
   out_3424132859136501520[48] = 0;
   out_3424132859136501520[49] = 0;
   out_3424132859136501520[50] = 0;
   out_3424132859136501520[51] = 0;
   out_3424132859136501520[52] = 0;
   out_3424132859136501520[53] = 0;
   out_3424132859136501520[54] = 0;
   out_3424132859136501520[55] = 0;
   out_3424132859136501520[56] = 1;
   out_3424132859136501520[57] = 0;
   out_3424132859136501520[58] = 0;
   out_3424132859136501520[59] = 0;
   out_3424132859136501520[60] = 0;
   out_3424132859136501520[61] = 0;
   out_3424132859136501520[62] = 0;
   out_3424132859136501520[63] = 0;
   out_3424132859136501520[64] = 0;
   out_3424132859136501520[65] = 0;
}
void h_10(double *state, double *unused, double *out_7308891731257820117) {
   out_7308891731257820117[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_7308891731257820117[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_7308891731257820117[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_913500786807553186) {
   out_913500786807553186[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_913500786807553186[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_913500786807553186[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_913500786807553186[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_913500786807553186[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_913500786807553186[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_913500786807553186[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_913500786807553186[7] = 0;
   out_913500786807553186[8] = 0;
   out_913500786807553186[9] = 0;
   out_913500786807553186[10] = 0;
   out_913500786807553186[11] = 0;
   out_913500786807553186[12] = 0;
   out_913500786807553186[13] = 0;
   out_913500786807553186[14] = 0;
   out_913500786807553186[15] = 0;
   out_913500786807553186[16] = 1;
   out_913500786807553186[17] = 0;
   out_913500786807553186[18] = 0;
   out_913500786807553186[19] = 1;
   out_913500786807553186[20] = 0;
   out_913500786807553186[21] = 0;
   out_913500786807553186[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_913500786807553186[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_913500786807553186[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_913500786807553186[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_913500786807553186[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_913500786807553186[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_913500786807553186[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_913500786807553186[29] = 0;
   out_913500786807553186[30] = 0;
   out_913500786807553186[31] = 0;
   out_913500786807553186[32] = 0;
   out_913500786807553186[33] = 0;
   out_913500786807553186[34] = 0;
   out_913500786807553186[35] = 0;
   out_913500786807553186[36] = 0;
   out_913500786807553186[37] = 0;
   out_913500786807553186[38] = 0;
   out_913500786807553186[39] = 1;
   out_913500786807553186[40] = 0;
   out_913500786807553186[41] = 0;
   out_913500786807553186[42] = 1;
   out_913500786807553186[43] = 0;
   out_913500786807553186[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_913500786807553186[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_913500786807553186[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_913500786807553186[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_913500786807553186[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_913500786807553186[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_913500786807553186[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_913500786807553186[51] = 0;
   out_913500786807553186[52] = 0;
   out_913500786807553186[53] = 0;
   out_913500786807553186[54] = 0;
   out_913500786807553186[55] = 0;
   out_913500786807553186[56] = 0;
   out_913500786807553186[57] = 0;
   out_913500786807553186[58] = 0;
   out_913500786807553186[59] = 0;
   out_913500786807553186[60] = 0;
   out_913500786807553186[61] = 0;
   out_913500786807553186[62] = 1;
   out_913500786807553186[63] = 0;
   out_913500786807553186[64] = 0;
   out_913500786807553186[65] = 1;
}
void h_12(double *state, double *unused, double *out_5548429088998615637) {
   out_5548429088998615637[0] = state[0];
   out_5548429088998615637[1] = state[1];
   out_5548429088998615637[2] = state[2];
}
void H_12(double *state, double *unused, double *out_8202399620538872670) {
   out_8202399620538872670[0] = 1;
   out_8202399620538872670[1] = 0;
   out_8202399620538872670[2] = 0;
   out_8202399620538872670[3] = 0;
   out_8202399620538872670[4] = 0;
   out_8202399620538872670[5] = 0;
   out_8202399620538872670[6] = 0;
   out_8202399620538872670[7] = 0;
   out_8202399620538872670[8] = 0;
   out_8202399620538872670[9] = 0;
   out_8202399620538872670[10] = 0;
   out_8202399620538872670[11] = 0;
   out_8202399620538872670[12] = 0;
   out_8202399620538872670[13] = 0;
   out_8202399620538872670[14] = 0;
   out_8202399620538872670[15] = 0;
   out_8202399620538872670[16] = 0;
   out_8202399620538872670[17] = 0;
   out_8202399620538872670[18] = 0;
   out_8202399620538872670[19] = 0;
   out_8202399620538872670[20] = 0;
   out_8202399620538872670[21] = 0;
   out_8202399620538872670[22] = 0;
   out_8202399620538872670[23] = 1;
   out_8202399620538872670[24] = 0;
   out_8202399620538872670[25] = 0;
   out_8202399620538872670[26] = 0;
   out_8202399620538872670[27] = 0;
   out_8202399620538872670[28] = 0;
   out_8202399620538872670[29] = 0;
   out_8202399620538872670[30] = 0;
   out_8202399620538872670[31] = 0;
   out_8202399620538872670[32] = 0;
   out_8202399620538872670[33] = 0;
   out_8202399620538872670[34] = 0;
   out_8202399620538872670[35] = 0;
   out_8202399620538872670[36] = 0;
   out_8202399620538872670[37] = 0;
   out_8202399620538872670[38] = 0;
   out_8202399620538872670[39] = 0;
   out_8202399620538872670[40] = 0;
   out_8202399620538872670[41] = 0;
   out_8202399620538872670[42] = 0;
   out_8202399620538872670[43] = 0;
   out_8202399620538872670[44] = 0;
   out_8202399620538872670[45] = 0;
   out_8202399620538872670[46] = 1;
   out_8202399620538872670[47] = 0;
   out_8202399620538872670[48] = 0;
   out_8202399620538872670[49] = 0;
   out_8202399620538872670[50] = 0;
   out_8202399620538872670[51] = 0;
   out_8202399620538872670[52] = 0;
   out_8202399620538872670[53] = 0;
   out_8202399620538872670[54] = 0;
   out_8202399620538872670[55] = 0;
   out_8202399620538872670[56] = 0;
   out_8202399620538872670[57] = 0;
   out_8202399620538872670[58] = 0;
   out_8202399620538872670[59] = 0;
   out_8202399620538872670[60] = 0;
   out_8202399620538872670[61] = 0;
   out_8202399620538872670[62] = 0;
   out_8202399620538872670[63] = 0;
   out_8202399620538872670[64] = 0;
   out_8202399620538872670[65] = 0;
}
void h_31(double *state, double *unused, double *out_9132230250461505415) {
   out_9132230250461505415[0] = state[7];
   out_9132230250461505415[1] = state[8];
   out_9132230250461505415[2] = state[9];
}
void H_31(double *state, double *unused, double *out_6549605269879518251) {
   out_6549605269879518251[0] = 0;
   out_6549605269879518251[1] = 0;
   out_6549605269879518251[2] = 0;
   out_6549605269879518251[3] = 0;
   out_6549605269879518251[4] = 0;
   out_6549605269879518251[5] = 0;
   out_6549605269879518251[6] = 0;
   out_6549605269879518251[7] = 1;
   out_6549605269879518251[8] = 0;
   out_6549605269879518251[9] = 0;
   out_6549605269879518251[10] = 0;
   out_6549605269879518251[11] = 0;
   out_6549605269879518251[12] = 0;
   out_6549605269879518251[13] = 0;
   out_6549605269879518251[14] = 0;
   out_6549605269879518251[15] = 0;
   out_6549605269879518251[16] = 0;
   out_6549605269879518251[17] = 0;
   out_6549605269879518251[18] = 0;
   out_6549605269879518251[19] = 0;
   out_6549605269879518251[20] = 0;
   out_6549605269879518251[21] = 0;
   out_6549605269879518251[22] = 0;
   out_6549605269879518251[23] = 0;
   out_6549605269879518251[24] = 0;
   out_6549605269879518251[25] = 0;
   out_6549605269879518251[26] = 0;
   out_6549605269879518251[27] = 0;
   out_6549605269879518251[28] = 0;
   out_6549605269879518251[29] = 0;
   out_6549605269879518251[30] = 1;
   out_6549605269879518251[31] = 0;
   out_6549605269879518251[32] = 0;
   out_6549605269879518251[33] = 0;
   out_6549605269879518251[34] = 0;
   out_6549605269879518251[35] = 0;
   out_6549605269879518251[36] = 0;
   out_6549605269879518251[37] = 0;
   out_6549605269879518251[38] = 0;
   out_6549605269879518251[39] = 0;
   out_6549605269879518251[40] = 0;
   out_6549605269879518251[41] = 0;
   out_6549605269879518251[42] = 0;
   out_6549605269879518251[43] = 0;
   out_6549605269879518251[44] = 0;
   out_6549605269879518251[45] = 0;
   out_6549605269879518251[46] = 0;
   out_6549605269879518251[47] = 0;
   out_6549605269879518251[48] = 0;
   out_6549605269879518251[49] = 0;
   out_6549605269879518251[50] = 0;
   out_6549605269879518251[51] = 0;
   out_6549605269879518251[52] = 0;
   out_6549605269879518251[53] = 1;
   out_6549605269879518251[54] = 0;
   out_6549605269879518251[55] = 0;
   out_6549605269879518251[56] = 0;
   out_6549605269879518251[57] = 0;
   out_6549605269879518251[58] = 0;
   out_6549605269879518251[59] = 0;
   out_6549605269879518251[60] = 0;
   out_6549605269879518251[61] = 0;
   out_6549605269879518251[62] = 0;
   out_6549605269879518251[63] = 0;
   out_6549605269879518251[64] = 0;
   out_6549605269879518251[65] = 0;
}
void h_32(double *state, double *unused, double *out_3979800604172186386) {
   out_3979800604172186386[0] = state[3];
   out_3979800604172186386[1] = state[4];
   out_3979800604172186386[2] = state[5];
   out_3979800604172186386[3] = state[6];
}
void H_32(double *state, double *unused, double *out_6095834431622420807) {
   out_6095834431622420807[0] = 0;
   out_6095834431622420807[1] = 0;
   out_6095834431622420807[2] = 0;
   out_6095834431622420807[3] = 1;
   out_6095834431622420807[4] = 0;
   out_6095834431622420807[5] = 0;
   out_6095834431622420807[6] = 0;
   out_6095834431622420807[7] = 0;
   out_6095834431622420807[8] = 0;
   out_6095834431622420807[9] = 0;
   out_6095834431622420807[10] = 0;
   out_6095834431622420807[11] = 0;
   out_6095834431622420807[12] = 0;
   out_6095834431622420807[13] = 0;
   out_6095834431622420807[14] = 0;
   out_6095834431622420807[15] = 0;
   out_6095834431622420807[16] = 0;
   out_6095834431622420807[17] = 0;
   out_6095834431622420807[18] = 0;
   out_6095834431622420807[19] = 0;
   out_6095834431622420807[20] = 0;
   out_6095834431622420807[21] = 0;
   out_6095834431622420807[22] = 0;
   out_6095834431622420807[23] = 0;
   out_6095834431622420807[24] = 0;
   out_6095834431622420807[25] = 0;
   out_6095834431622420807[26] = 1;
   out_6095834431622420807[27] = 0;
   out_6095834431622420807[28] = 0;
   out_6095834431622420807[29] = 0;
   out_6095834431622420807[30] = 0;
   out_6095834431622420807[31] = 0;
   out_6095834431622420807[32] = 0;
   out_6095834431622420807[33] = 0;
   out_6095834431622420807[34] = 0;
   out_6095834431622420807[35] = 0;
   out_6095834431622420807[36] = 0;
   out_6095834431622420807[37] = 0;
   out_6095834431622420807[38] = 0;
   out_6095834431622420807[39] = 0;
   out_6095834431622420807[40] = 0;
   out_6095834431622420807[41] = 0;
   out_6095834431622420807[42] = 0;
   out_6095834431622420807[43] = 0;
   out_6095834431622420807[44] = 0;
   out_6095834431622420807[45] = 0;
   out_6095834431622420807[46] = 0;
   out_6095834431622420807[47] = 0;
   out_6095834431622420807[48] = 0;
   out_6095834431622420807[49] = 1;
   out_6095834431622420807[50] = 0;
   out_6095834431622420807[51] = 0;
   out_6095834431622420807[52] = 0;
   out_6095834431622420807[53] = 0;
   out_6095834431622420807[54] = 0;
   out_6095834431622420807[55] = 0;
   out_6095834431622420807[56] = 0;
   out_6095834431622420807[57] = 0;
   out_6095834431622420807[58] = 0;
   out_6095834431622420807[59] = 0;
   out_6095834431622420807[60] = 0;
   out_6095834431622420807[61] = 0;
   out_6095834431622420807[62] = 0;
   out_6095834431622420807[63] = 0;
   out_6095834431622420807[64] = 0;
   out_6095834431622420807[65] = 0;
   out_6095834431622420807[66] = 0;
   out_6095834431622420807[67] = 0;
   out_6095834431622420807[68] = 0;
   out_6095834431622420807[69] = 0;
   out_6095834431622420807[70] = 0;
   out_6095834431622420807[71] = 0;
   out_6095834431622420807[72] = 1;
   out_6095834431622420807[73] = 0;
   out_6095834431622420807[74] = 0;
   out_6095834431622420807[75] = 0;
   out_6095834431622420807[76] = 0;
   out_6095834431622420807[77] = 0;
   out_6095834431622420807[78] = 0;
   out_6095834431622420807[79] = 0;
   out_6095834431622420807[80] = 0;
   out_6095834431622420807[81] = 0;
   out_6095834431622420807[82] = 0;
   out_6095834431622420807[83] = 0;
   out_6095834431622420807[84] = 0;
   out_6095834431622420807[85] = 0;
   out_6095834431622420807[86] = 0;
   out_6095834431622420807[87] = 0;
}
void h_13(double *state, double *unused, double *out_7111071665068184166) {
   out_7111071665068184166[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_7111071665068184166[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_7111071665068184166[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_4236907720035134068) {
   out_4236907720035134068[0] = 0;
   out_4236907720035134068[1] = 0;
   out_4236907720035134068[2] = 0;
   out_4236907720035134068[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4236907720035134068[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4236907720035134068[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_4236907720035134068[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4236907720035134068[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_4236907720035134068[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_4236907720035134068[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_4236907720035134068[10] = 0;
   out_4236907720035134068[11] = 0;
   out_4236907720035134068[12] = 0;
   out_4236907720035134068[13] = 0;
   out_4236907720035134068[14] = 0;
   out_4236907720035134068[15] = 0;
   out_4236907720035134068[16] = 0;
   out_4236907720035134068[17] = 0;
   out_4236907720035134068[18] = 0;
   out_4236907720035134068[19] = 0;
   out_4236907720035134068[20] = 0;
   out_4236907720035134068[21] = 0;
   out_4236907720035134068[22] = 0;
   out_4236907720035134068[23] = 0;
   out_4236907720035134068[24] = 0;
   out_4236907720035134068[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4236907720035134068[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4236907720035134068[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4236907720035134068[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_4236907720035134068[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_4236907720035134068[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_4236907720035134068[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_4236907720035134068[32] = 0;
   out_4236907720035134068[33] = 0;
   out_4236907720035134068[34] = 0;
   out_4236907720035134068[35] = 0;
   out_4236907720035134068[36] = 0;
   out_4236907720035134068[37] = 0;
   out_4236907720035134068[38] = 0;
   out_4236907720035134068[39] = 0;
   out_4236907720035134068[40] = 0;
   out_4236907720035134068[41] = 0;
   out_4236907720035134068[42] = 0;
   out_4236907720035134068[43] = 0;
   out_4236907720035134068[44] = 0;
   out_4236907720035134068[45] = 0;
   out_4236907720035134068[46] = 0;
   out_4236907720035134068[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4236907720035134068[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_4236907720035134068[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4236907720035134068[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4236907720035134068[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_4236907720035134068[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_4236907720035134068[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_4236907720035134068[54] = 0;
   out_4236907720035134068[55] = 0;
   out_4236907720035134068[56] = 0;
   out_4236907720035134068[57] = 0;
   out_4236907720035134068[58] = 0;
   out_4236907720035134068[59] = 0;
   out_4236907720035134068[60] = 0;
   out_4236907720035134068[61] = 0;
   out_4236907720035134068[62] = 0;
   out_4236907720035134068[63] = 0;
   out_4236907720035134068[64] = 0;
   out_4236907720035134068[65] = 0;
}
void h_14(double *state, double *unused, double *out_1785199206761257061) {
   out_1785199206761257061[0] = state[10];
   out_1785199206761257061[1] = state[11];
   out_1785199206761257061[2] = state[12];
}
void H_14(double *state, double *unused, double *out_3424132859136501520) {
   out_3424132859136501520[0] = 0;
   out_3424132859136501520[1] = 0;
   out_3424132859136501520[2] = 0;
   out_3424132859136501520[3] = 0;
   out_3424132859136501520[4] = 0;
   out_3424132859136501520[5] = 0;
   out_3424132859136501520[6] = 0;
   out_3424132859136501520[7] = 0;
   out_3424132859136501520[8] = 0;
   out_3424132859136501520[9] = 0;
   out_3424132859136501520[10] = 1;
   out_3424132859136501520[11] = 0;
   out_3424132859136501520[12] = 0;
   out_3424132859136501520[13] = 0;
   out_3424132859136501520[14] = 0;
   out_3424132859136501520[15] = 0;
   out_3424132859136501520[16] = 0;
   out_3424132859136501520[17] = 0;
   out_3424132859136501520[18] = 0;
   out_3424132859136501520[19] = 0;
   out_3424132859136501520[20] = 0;
   out_3424132859136501520[21] = 0;
   out_3424132859136501520[22] = 0;
   out_3424132859136501520[23] = 0;
   out_3424132859136501520[24] = 0;
   out_3424132859136501520[25] = 0;
   out_3424132859136501520[26] = 0;
   out_3424132859136501520[27] = 0;
   out_3424132859136501520[28] = 0;
   out_3424132859136501520[29] = 0;
   out_3424132859136501520[30] = 0;
   out_3424132859136501520[31] = 0;
   out_3424132859136501520[32] = 0;
   out_3424132859136501520[33] = 1;
   out_3424132859136501520[34] = 0;
   out_3424132859136501520[35] = 0;
   out_3424132859136501520[36] = 0;
   out_3424132859136501520[37] = 0;
   out_3424132859136501520[38] = 0;
   out_3424132859136501520[39] = 0;
   out_3424132859136501520[40] = 0;
   out_3424132859136501520[41] = 0;
   out_3424132859136501520[42] = 0;
   out_3424132859136501520[43] = 0;
   out_3424132859136501520[44] = 0;
   out_3424132859136501520[45] = 0;
   out_3424132859136501520[46] = 0;
   out_3424132859136501520[47] = 0;
   out_3424132859136501520[48] = 0;
   out_3424132859136501520[49] = 0;
   out_3424132859136501520[50] = 0;
   out_3424132859136501520[51] = 0;
   out_3424132859136501520[52] = 0;
   out_3424132859136501520[53] = 0;
   out_3424132859136501520[54] = 0;
   out_3424132859136501520[55] = 0;
   out_3424132859136501520[56] = 1;
   out_3424132859136501520[57] = 0;
   out_3424132859136501520[58] = 0;
   out_3424132859136501520[59] = 0;
   out_3424132859136501520[60] = 0;
   out_3424132859136501520[61] = 0;
   out_3424132859136501520[62] = 0;
   out_3424132859136501520[63] = 0;
   out_3424132859136501520[64] = 0;
   out_3424132859136501520[65] = 0;
}
void h_33(double *state, double *unused, double *out_6496118128752527053) {
   out_6496118128752527053[0] = state[16];
   out_6496118128752527053[1] = state[17];
   out_6496118128752527053[2] = state[18];
}
void H_33(double *state, double *unused, double *out_8746581799191175761) {
   out_8746581799191175761[0] = 0;
   out_8746581799191175761[1] = 0;
   out_8746581799191175761[2] = 0;
   out_8746581799191175761[3] = 0;
   out_8746581799191175761[4] = 0;
   out_8746581799191175761[5] = 0;
   out_8746581799191175761[6] = 0;
   out_8746581799191175761[7] = 0;
   out_8746581799191175761[8] = 0;
   out_8746581799191175761[9] = 0;
   out_8746581799191175761[10] = 0;
   out_8746581799191175761[11] = 0;
   out_8746581799191175761[12] = 0;
   out_8746581799191175761[13] = 0;
   out_8746581799191175761[14] = 0;
   out_8746581799191175761[15] = 0;
   out_8746581799191175761[16] = 1;
   out_8746581799191175761[17] = 0;
   out_8746581799191175761[18] = 0;
   out_8746581799191175761[19] = 0;
   out_8746581799191175761[20] = 0;
   out_8746581799191175761[21] = 0;
   out_8746581799191175761[22] = 0;
   out_8746581799191175761[23] = 0;
   out_8746581799191175761[24] = 0;
   out_8746581799191175761[25] = 0;
   out_8746581799191175761[26] = 0;
   out_8746581799191175761[27] = 0;
   out_8746581799191175761[28] = 0;
   out_8746581799191175761[29] = 0;
   out_8746581799191175761[30] = 0;
   out_8746581799191175761[31] = 0;
   out_8746581799191175761[32] = 0;
   out_8746581799191175761[33] = 0;
   out_8746581799191175761[34] = 0;
   out_8746581799191175761[35] = 0;
   out_8746581799191175761[36] = 0;
   out_8746581799191175761[37] = 0;
   out_8746581799191175761[38] = 0;
   out_8746581799191175761[39] = 1;
   out_8746581799191175761[40] = 0;
   out_8746581799191175761[41] = 0;
   out_8746581799191175761[42] = 0;
   out_8746581799191175761[43] = 0;
   out_8746581799191175761[44] = 0;
   out_8746581799191175761[45] = 0;
   out_8746581799191175761[46] = 0;
   out_8746581799191175761[47] = 0;
   out_8746581799191175761[48] = 0;
   out_8746581799191175761[49] = 0;
   out_8746581799191175761[50] = 0;
   out_8746581799191175761[51] = 0;
   out_8746581799191175761[52] = 0;
   out_8746581799191175761[53] = 0;
   out_8746581799191175761[54] = 0;
   out_8746581799191175761[55] = 0;
   out_8746581799191175761[56] = 0;
   out_8746581799191175761[57] = 0;
   out_8746581799191175761[58] = 0;
   out_8746581799191175761[59] = 0;
   out_8746581799191175761[60] = 0;
   out_8746581799191175761[61] = 0;
   out_8746581799191175761[62] = 1;
   out_8746581799191175761[63] = 0;
   out_8746581799191175761[64] = 0;
   out_8746581799191175761[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_7764470520729401396) {
  H(in_vec, out_7764470520729401396);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_2761022508896775024) {
  err_fun(nom_x, delta_x, out_2761022508896775024);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_578264965021430493) {
  inv_err_fun(nom_x, true_x, out_578264965021430493);
}
void live_H_mod_fun(double *state, double *out_8789625662652965991) {
  H_mod_fun(state, out_8789625662652965991);
}
void live_f_fun(double *state, double dt, double *out_4797993169837165730) {
  f_fun(state,  dt, out_4797993169837165730);
}
void live_F_fun(double *state, double dt, double *out_3757987011767936423) {
  F_fun(state,  dt, out_3757987011767936423);
}
void live_h_4(double *state, double *unused, double *out_3407413638906790451) {
  h_4(state, unused, out_3407413638906790451);
}
void live_H_4(double *state, double *unused, double *out_3182943212506910875) {
  H_4(state, unused, out_3182943212506910875);
}
void live_h_9(double *state, double *unused, double *out_1785199206761257061) {
  h_9(state, unused, out_1785199206761257061);
}
void live_H_9(double *state, double *unused, double *out_3424132859136501520) {
  H_9(state, unused, out_3424132859136501520);
}
void live_h_10(double *state, double *unused, double *out_7308891731257820117) {
  h_10(state, unused, out_7308891731257820117);
}
void live_H_10(double *state, double *unused, double *out_913500786807553186) {
  H_10(state, unused, out_913500786807553186);
}
void live_h_12(double *state, double *unused, double *out_5548429088998615637) {
  h_12(state, unused, out_5548429088998615637);
}
void live_H_12(double *state, double *unused, double *out_8202399620538872670) {
  H_12(state, unused, out_8202399620538872670);
}
void live_h_31(double *state, double *unused, double *out_9132230250461505415) {
  h_31(state, unused, out_9132230250461505415);
}
void live_H_31(double *state, double *unused, double *out_6549605269879518251) {
  H_31(state, unused, out_6549605269879518251);
}
void live_h_32(double *state, double *unused, double *out_3979800604172186386) {
  h_32(state, unused, out_3979800604172186386);
}
void live_H_32(double *state, double *unused, double *out_6095834431622420807) {
  H_32(state, unused, out_6095834431622420807);
}
void live_h_13(double *state, double *unused, double *out_7111071665068184166) {
  h_13(state, unused, out_7111071665068184166);
}
void live_H_13(double *state, double *unused, double *out_4236907720035134068) {
  H_13(state, unused, out_4236907720035134068);
}
void live_h_14(double *state, double *unused, double *out_1785199206761257061) {
  h_14(state, unused, out_1785199206761257061);
}
void live_H_14(double *state, double *unused, double *out_3424132859136501520) {
  H_14(state, unused, out_3424132859136501520);
}
void live_h_33(double *state, double *unused, double *out_6496118128752527053) {
  h_33(state, unused, out_6496118128752527053);
}
void live_H_33(double *state, double *unused, double *out_8746581799191175761) {
  H_33(state, unused, out_8746581799191175761);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
