#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_6784214534126845801) {
   out_6784214534126845801[0] = 0;
   out_6784214534126845801[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_6784214534126845801[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_6784214534126845801[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_6784214534126845801[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_6784214534126845801[5] = -sin(in_vec[1]);
   out_6784214534126845801[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_6784214534126845801[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_6784214534126845801[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_6784214534126845801[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_6784214534126845801[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_6784214534126845801[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_6784214534126845801[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_6784214534126845801[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_6784214534126845801[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_6784214534126845801[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_6784214534126845801[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_6784214534126845801[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_3844476456932584636) {
   out_3844476456932584636[0] = delta_x[0] + nom_x[0];
   out_3844476456932584636[1] = delta_x[1] + nom_x[1];
   out_3844476456932584636[2] = delta_x[2] + nom_x[2];
   out_3844476456932584636[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_3844476456932584636[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_3844476456932584636[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_3844476456932584636[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_3844476456932584636[7] = delta_x[6] + nom_x[7];
   out_3844476456932584636[8] = delta_x[7] + nom_x[8];
   out_3844476456932584636[9] = delta_x[8] + nom_x[9];
   out_3844476456932584636[10] = delta_x[9] + nom_x[10];
   out_3844476456932584636[11] = delta_x[10] + nom_x[11];
   out_3844476456932584636[12] = delta_x[11] + nom_x[12];
   out_3844476456932584636[13] = delta_x[12] + nom_x[13];
   out_3844476456932584636[14] = delta_x[13] + nom_x[14];
   out_3844476456932584636[15] = delta_x[14] + nom_x[15];
   out_3844476456932584636[16] = delta_x[15] + nom_x[16];
   out_3844476456932584636[17] = delta_x[16] + nom_x[17];
   out_3844476456932584636[18] = delta_x[17] + nom_x[18];
   out_3844476456932584636[19] = delta_x[18] + nom_x[19];
   out_3844476456932584636[20] = delta_x[19] + nom_x[20];
   out_3844476456932584636[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_6720843841751766539) {
   out_6720843841751766539[0] = -nom_x[0] + true_x[0];
   out_6720843841751766539[1] = -nom_x[1] + true_x[1];
   out_6720843841751766539[2] = -nom_x[2] + true_x[2];
   out_6720843841751766539[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_6720843841751766539[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_6720843841751766539[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_6720843841751766539[6] = -nom_x[7] + true_x[7];
   out_6720843841751766539[7] = -nom_x[8] + true_x[8];
   out_6720843841751766539[8] = -nom_x[9] + true_x[9];
   out_6720843841751766539[9] = -nom_x[10] + true_x[10];
   out_6720843841751766539[10] = -nom_x[11] + true_x[11];
   out_6720843841751766539[11] = -nom_x[12] + true_x[12];
   out_6720843841751766539[12] = -nom_x[13] + true_x[13];
   out_6720843841751766539[13] = -nom_x[14] + true_x[14];
   out_6720843841751766539[14] = -nom_x[15] + true_x[15];
   out_6720843841751766539[15] = -nom_x[16] + true_x[16];
   out_6720843841751766539[16] = -nom_x[17] + true_x[17];
   out_6720843841751766539[17] = -nom_x[18] + true_x[18];
   out_6720843841751766539[18] = -nom_x[19] + true_x[19];
   out_6720843841751766539[19] = -nom_x[20] + true_x[20];
   out_6720843841751766539[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_5897332321969546181) {
   out_5897332321969546181[0] = 1.0;
   out_5897332321969546181[1] = 0;
   out_5897332321969546181[2] = 0;
   out_5897332321969546181[3] = 0;
   out_5897332321969546181[4] = 0;
   out_5897332321969546181[5] = 0;
   out_5897332321969546181[6] = 0;
   out_5897332321969546181[7] = 0;
   out_5897332321969546181[8] = 0;
   out_5897332321969546181[9] = 0;
   out_5897332321969546181[10] = 0;
   out_5897332321969546181[11] = 0;
   out_5897332321969546181[12] = 0;
   out_5897332321969546181[13] = 0;
   out_5897332321969546181[14] = 0;
   out_5897332321969546181[15] = 0;
   out_5897332321969546181[16] = 0;
   out_5897332321969546181[17] = 0;
   out_5897332321969546181[18] = 0;
   out_5897332321969546181[19] = 0;
   out_5897332321969546181[20] = 0;
   out_5897332321969546181[21] = 0;
   out_5897332321969546181[22] = 1.0;
   out_5897332321969546181[23] = 0;
   out_5897332321969546181[24] = 0;
   out_5897332321969546181[25] = 0;
   out_5897332321969546181[26] = 0;
   out_5897332321969546181[27] = 0;
   out_5897332321969546181[28] = 0;
   out_5897332321969546181[29] = 0;
   out_5897332321969546181[30] = 0;
   out_5897332321969546181[31] = 0;
   out_5897332321969546181[32] = 0;
   out_5897332321969546181[33] = 0;
   out_5897332321969546181[34] = 0;
   out_5897332321969546181[35] = 0;
   out_5897332321969546181[36] = 0;
   out_5897332321969546181[37] = 0;
   out_5897332321969546181[38] = 0;
   out_5897332321969546181[39] = 0;
   out_5897332321969546181[40] = 0;
   out_5897332321969546181[41] = 0;
   out_5897332321969546181[42] = 0;
   out_5897332321969546181[43] = 0;
   out_5897332321969546181[44] = 1.0;
   out_5897332321969546181[45] = 0;
   out_5897332321969546181[46] = 0;
   out_5897332321969546181[47] = 0;
   out_5897332321969546181[48] = 0;
   out_5897332321969546181[49] = 0;
   out_5897332321969546181[50] = 0;
   out_5897332321969546181[51] = 0;
   out_5897332321969546181[52] = 0;
   out_5897332321969546181[53] = 0;
   out_5897332321969546181[54] = 0;
   out_5897332321969546181[55] = 0;
   out_5897332321969546181[56] = 0;
   out_5897332321969546181[57] = 0;
   out_5897332321969546181[58] = 0;
   out_5897332321969546181[59] = 0;
   out_5897332321969546181[60] = 0;
   out_5897332321969546181[61] = 0;
   out_5897332321969546181[62] = 0;
   out_5897332321969546181[63] = 0;
   out_5897332321969546181[64] = 0;
   out_5897332321969546181[65] = 0;
   out_5897332321969546181[66] = -0.5*state[4];
   out_5897332321969546181[67] = -0.5*state[5];
   out_5897332321969546181[68] = -0.5*state[6];
   out_5897332321969546181[69] = 0;
   out_5897332321969546181[70] = 0;
   out_5897332321969546181[71] = 0;
   out_5897332321969546181[72] = 0;
   out_5897332321969546181[73] = 0;
   out_5897332321969546181[74] = 0;
   out_5897332321969546181[75] = 0;
   out_5897332321969546181[76] = 0;
   out_5897332321969546181[77] = 0;
   out_5897332321969546181[78] = 0;
   out_5897332321969546181[79] = 0;
   out_5897332321969546181[80] = 0;
   out_5897332321969546181[81] = 0;
   out_5897332321969546181[82] = 0;
   out_5897332321969546181[83] = 0;
   out_5897332321969546181[84] = 0;
   out_5897332321969546181[85] = 0;
   out_5897332321969546181[86] = 0;
   out_5897332321969546181[87] = 0.5*state[3];
   out_5897332321969546181[88] = 0.5*state[6];
   out_5897332321969546181[89] = -0.5*state[5];
   out_5897332321969546181[90] = 0;
   out_5897332321969546181[91] = 0;
   out_5897332321969546181[92] = 0;
   out_5897332321969546181[93] = 0;
   out_5897332321969546181[94] = 0;
   out_5897332321969546181[95] = 0;
   out_5897332321969546181[96] = 0;
   out_5897332321969546181[97] = 0;
   out_5897332321969546181[98] = 0;
   out_5897332321969546181[99] = 0;
   out_5897332321969546181[100] = 0;
   out_5897332321969546181[101] = 0;
   out_5897332321969546181[102] = 0;
   out_5897332321969546181[103] = 0;
   out_5897332321969546181[104] = 0;
   out_5897332321969546181[105] = 0;
   out_5897332321969546181[106] = 0;
   out_5897332321969546181[107] = 0;
   out_5897332321969546181[108] = -0.5*state[6];
   out_5897332321969546181[109] = 0.5*state[3];
   out_5897332321969546181[110] = 0.5*state[4];
   out_5897332321969546181[111] = 0;
   out_5897332321969546181[112] = 0;
   out_5897332321969546181[113] = 0;
   out_5897332321969546181[114] = 0;
   out_5897332321969546181[115] = 0;
   out_5897332321969546181[116] = 0;
   out_5897332321969546181[117] = 0;
   out_5897332321969546181[118] = 0;
   out_5897332321969546181[119] = 0;
   out_5897332321969546181[120] = 0;
   out_5897332321969546181[121] = 0;
   out_5897332321969546181[122] = 0;
   out_5897332321969546181[123] = 0;
   out_5897332321969546181[124] = 0;
   out_5897332321969546181[125] = 0;
   out_5897332321969546181[126] = 0;
   out_5897332321969546181[127] = 0;
   out_5897332321969546181[128] = 0;
   out_5897332321969546181[129] = 0.5*state[5];
   out_5897332321969546181[130] = -0.5*state[4];
   out_5897332321969546181[131] = 0.5*state[3];
   out_5897332321969546181[132] = 0;
   out_5897332321969546181[133] = 0;
   out_5897332321969546181[134] = 0;
   out_5897332321969546181[135] = 0;
   out_5897332321969546181[136] = 0;
   out_5897332321969546181[137] = 0;
   out_5897332321969546181[138] = 0;
   out_5897332321969546181[139] = 0;
   out_5897332321969546181[140] = 0;
   out_5897332321969546181[141] = 0;
   out_5897332321969546181[142] = 0;
   out_5897332321969546181[143] = 0;
   out_5897332321969546181[144] = 0;
   out_5897332321969546181[145] = 0;
   out_5897332321969546181[146] = 0;
   out_5897332321969546181[147] = 0;
   out_5897332321969546181[148] = 0;
   out_5897332321969546181[149] = 0;
   out_5897332321969546181[150] = 0;
   out_5897332321969546181[151] = 0;
   out_5897332321969546181[152] = 0;
   out_5897332321969546181[153] = 1.0;
   out_5897332321969546181[154] = 0;
   out_5897332321969546181[155] = 0;
   out_5897332321969546181[156] = 0;
   out_5897332321969546181[157] = 0;
   out_5897332321969546181[158] = 0;
   out_5897332321969546181[159] = 0;
   out_5897332321969546181[160] = 0;
   out_5897332321969546181[161] = 0;
   out_5897332321969546181[162] = 0;
   out_5897332321969546181[163] = 0;
   out_5897332321969546181[164] = 0;
   out_5897332321969546181[165] = 0;
   out_5897332321969546181[166] = 0;
   out_5897332321969546181[167] = 0;
   out_5897332321969546181[168] = 0;
   out_5897332321969546181[169] = 0;
   out_5897332321969546181[170] = 0;
   out_5897332321969546181[171] = 0;
   out_5897332321969546181[172] = 0;
   out_5897332321969546181[173] = 0;
   out_5897332321969546181[174] = 0;
   out_5897332321969546181[175] = 1.0;
   out_5897332321969546181[176] = 0;
   out_5897332321969546181[177] = 0;
   out_5897332321969546181[178] = 0;
   out_5897332321969546181[179] = 0;
   out_5897332321969546181[180] = 0;
   out_5897332321969546181[181] = 0;
   out_5897332321969546181[182] = 0;
   out_5897332321969546181[183] = 0;
   out_5897332321969546181[184] = 0;
   out_5897332321969546181[185] = 0;
   out_5897332321969546181[186] = 0;
   out_5897332321969546181[187] = 0;
   out_5897332321969546181[188] = 0;
   out_5897332321969546181[189] = 0;
   out_5897332321969546181[190] = 0;
   out_5897332321969546181[191] = 0;
   out_5897332321969546181[192] = 0;
   out_5897332321969546181[193] = 0;
   out_5897332321969546181[194] = 0;
   out_5897332321969546181[195] = 0;
   out_5897332321969546181[196] = 0;
   out_5897332321969546181[197] = 1.0;
   out_5897332321969546181[198] = 0;
   out_5897332321969546181[199] = 0;
   out_5897332321969546181[200] = 0;
   out_5897332321969546181[201] = 0;
   out_5897332321969546181[202] = 0;
   out_5897332321969546181[203] = 0;
   out_5897332321969546181[204] = 0;
   out_5897332321969546181[205] = 0;
   out_5897332321969546181[206] = 0;
   out_5897332321969546181[207] = 0;
   out_5897332321969546181[208] = 0;
   out_5897332321969546181[209] = 0;
   out_5897332321969546181[210] = 0;
   out_5897332321969546181[211] = 0;
   out_5897332321969546181[212] = 0;
   out_5897332321969546181[213] = 0;
   out_5897332321969546181[214] = 0;
   out_5897332321969546181[215] = 0;
   out_5897332321969546181[216] = 0;
   out_5897332321969546181[217] = 0;
   out_5897332321969546181[218] = 0;
   out_5897332321969546181[219] = 1.0;
   out_5897332321969546181[220] = 0;
   out_5897332321969546181[221] = 0;
   out_5897332321969546181[222] = 0;
   out_5897332321969546181[223] = 0;
   out_5897332321969546181[224] = 0;
   out_5897332321969546181[225] = 0;
   out_5897332321969546181[226] = 0;
   out_5897332321969546181[227] = 0;
   out_5897332321969546181[228] = 0;
   out_5897332321969546181[229] = 0;
   out_5897332321969546181[230] = 0;
   out_5897332321969546181[231] = 0;
   out_5897332321969546181[232] = 0;
   out_5897332321969546181[233] = 0;
   out_5897332321969546181[234] = 0;
   out_5897332321969546181[235] = 0;
   out_5897332321969546181[236] = 0;
   out_5897332321969546181[237] = 0;
   out_5897332321969546181[238] = 0;
   out_5897332321969546181[239] = 0;
   out_5897332321969546181[240] = 0;
   out_5897332321969546181[241] = 1.0;
   out_5897332321969546181[242] = 0;
   out_5897332321969546181[243] = 0;
   out_5897332321969546181[244] = 0;
   out_5897332321969546181[245] = 0;
   out_5897332321969546181[246] = 0;
   out_5897332321969546181[247] = 0;
   out_5897332321969546181[248] = 0;
   out_5897332321969546181[249] = 0;
   out_5897332321969546181[250] = 0;
   out_5897332321969546181[251] = 0;
   out_5897332321969546181[252] = 0;
   out_5897332321969546181[253] = 0;
   out_5897332321969546181[254] = 0;
   out_5897332321969546181[255] = 0;
   out_5897332321969546181[256] = 0;
   out_5897332321969546181[257] = 0;
   out_5897332321969546181[258] = 0;
   out_5897332321969546181[259] = 0;
   out_5897332321969546181[260] = 0;
   out_5897332321969546181[261] = 0;
   out_5897332321969546181[262] = 0;
   out_5897332321969546181[263] = 1.0;
   out_5897332321969546181[264] = 0;
   out_5897332321969546181[265] = 0;
   out_5897332321969546181[266] = 0;
   out_5897332321969546181[267] = 0;
   out_5897332321969546181[268] = 0;
   out_5897332321969546181[269] = 0;
   out_5897332321969546181[270] = 0;
   out_5897332321969546181[271] = 0;
   out_5897332321969546181[272] = 0;
   out_5897332321969546181[273] = 0;
   out_5897332321969546181[274] = 0;
   out_5897332321969546181[275] = 0;
   out_5897332321969546181[276] = 0;
   out_5897332321969546181[277] = 0;
   out_5897332321969546181[278] = 0;
   out_5897332321969546181[279] = 0;
   out_5897332321969546181[280] = 0;
   out_5897332321969546181[281] = 0;
   out_5897332321969546181[282] = 0;
   out_5897332321969546181[283] = 0;
   out_5897332321969546181[284] = 0;
   out_5897332321969546181[285] = 1.0;
   out_5897332321969546181[286] = 0;
   out_5897332321969546181[287] = 0;
   out_5897332321969546181[288] = 0;
   out_5897332321969546181[289] = 0;
   out_5897332321969546181[290] = 0;
   out_5897332321969546181[291] = 0;
   out_5897332321969546181[292] = 0;
   out_5897332321969546181[293] = 0;
   out_5897332321969546181[294] = 0;
   out_5897332321969546181[295] = 0;
   out_5897332321969546181[296] = 0;
   out_5897332321969546181[297] = 0;
   out_5897332321969546181[298] = 0;
   out_5897332321969546181[299] = 0;
   out_5897332321969546181[300] = 0;
   out_5897332321969546181[301] = 0;
   out_5897332321969546181[302] = 0;
   out_5897332321969546181[303] = 0;
   out_5897332321969546181[304] = 0;
   out_5897332321969546181[305] = 0;
   out_5897332321969546181[306] = 0;
   out_5897332321969546181[307] = 1.0;
   out_5897332321969546181[308] = 0;
   out_5897332321969546181[309] = 0;
   out_5897332321969546181[310] = 0;
   out_5897332321969546181[311] = 0;
   out_5897332321969546181[312] = 0;
   out_5897332321969546181[313] = 0;
   out_5897332321969546181[314] = 0;
   out_5897332321969546181[315] = 0;
   out_5897332321969546181[316] = 0;
   out_5897332321969546181[317] = 0;
   out_5897332321969546181[318] = 0;
   out_5897332321969546181[319] = 0;
   out_5897332321969546181[320] = 0;
   out_5897332321969546181[321] = 0;
   out_5897332321969546181[322] = 0;
   out_5897332321969546181[323] = 0;
   out_5897332321969546181[324] = 0;
   out_5897332321969546181[325] = 0;
   out_5897332321969546181[326] = 0;
   out_5897332321969546181[327] = 0;
   out_5897332321969546181[328] = 0;
   out_5897332321969546181[329] = 1.0;
   out_5897332321969546181[330] = 0;
   out_5897332321969546181[331] = 0;
   out_5897332321969546181[332] = 0;
   out_5897332321969546181[333] = 0;
   out_5897332321969546181[334] = 0;
   out_5897332321969546181[335] = 0;
   out_5897332321969546181[336] = 0;
   out_5897332321969546181[337] = 0;
   out_5897332321969546181[338] = 0;
   out_5897332321969546181[339] = 0;
   out_5897332321969546181[340] = 0;
   out_5897332321969546181[341] = 0;
   out_5897332321969546181[342] = 0;
   out_5897332321969546181[343] = 0;
   out_5897332321969546181[344] = 0;
   out_5897332321969546181[345] = 0;
   out_5897332321969546181[346] = 0;
   out_5897332321969546181[347] = 0;
   out_5897332321969546181[348] = 0;
   out_5897332321969546181[349] = 0;
   out_5897332321969546181[350] = 0;
   out_5897332321969546181[351] = 1.0;
   out_5897332321969546181[352] = 0;
   out_5897332321969546181[353] = 0;
   out_5897332321969546181[354] = 0;
   out_5897332321969546181[355] = 0;
   out_5897332321969546181[356] = 0;
   out_5897332321969546181[357] = 0;
   out_5897332321969546181[358] = 0;
   out_5897332321969546181[359] = 0;
   out_5897332321969546181[360] = 0;
   out_5897332321969546181[361] = 0;
   out_5897332321969546181[362] = 0;
   out_5897332321969546181[363] = 0;
   out_5897332321969546181[364] = 0;
   out_5897332321969546181[365] = 0;
   out_5897332321969546181[366] = 0;
   out_5897332321969546181[367] = 0;
   out_5897332321969546181[368] = 0;
   out_5897332321969546181[369] = 0;
   out_5897332321969546181[370] = 0;
   out_5897332321969546181[371] = 0;
   out_5897332321969546181[372] = 0;
   out_5897332321969546181[373] = 1.0;
   out_5897332321969546181[374] = 0;
   out_5897332321969546181[375] = 0;
   out_5897332321969546181[376] = 0;
   out_5897332321969546181[377] = 0;
   out_5897332321969546181[378] = 0;
   out_5897332321969546181[379] = 0;
   out_5897332321969546181[380] = 0;
   out_5897332321969546181[381] = 0;
   out_5897332321969546181[382] = 0;
   out_5897332321969546181[383] = 0;
   out_5897332321969546181[384] = 0;
   out_5897332321969546181[385] = 0;
   out_5897332321969546181[386] = 0;
   out_5897332321969546181[387] = 0;
   out_5897332321969546181[388] = 0;
   out_5897332321969546181[389] = 0;
   out_5897332321969546181[390] = 0;
   out_5897332321969546181[391] = 0;
   out_5897332321969546181[392] = 0;
   out_5897332321969546181[393] = 0;
   out_5897332321969546181[394] = 0;
   out_5897332321969546181[395] = 1.0;
   out_5897332321969546181[396] = 0;
   out_5897332321969546181[397] = 0;
   out_5897332321969546181[398] = 0;
   out_5897332321969546181[399] = 0;
   out_5897332321969546181[400] = 0;
   out_5897332321969546181[401] = 0;
   out_5897332321969546181[402] = 0;
   out_5897332321969546181[403] = 0;
   out_5897332321969546181[404] = 0;
   out_5897332321969546181[405] = 0;
   out_5897332321969546181[406] = 0;
   out_5897332321969546181[407] = 0;
   out_5897332321969546181[408] = 0;
   out_5897332321969546181[409] = 0;
   out_5897332321969546181[410] = 0;
   out_5897332321969546181[411] = 0;
   out_5897332321969546181[412] = 0;
   out_5897332321969546181[413] = 0;
   out_5897332321969546181[414] = 0;
   out_5897332321969546181[415] = 0;
   out_5897332321969546181[416] = 0;
   out_5897332321969546181[417] = 1.0;
   out_5897332321969546181[418] = 0;
   out_5897332321969546181[419] = 0;
   out_5897332321969546181[420] = 0;
   out_5897332321969546181[421] = 0;
   out_5897332321969546181[422] = 0;
   out_5897332321969546181[423] = 0;
   out_5897332321969546181[424] = 0;
   out_5897332321969546181[425] = 0;
   out_5897332321969546181[426] = 0;
   out_5897332321969546181[427] = 0;
   out_5897332321969546181[428] = 0;
   out_5897332321969546181[429] = 0;
   out_5897332321969546181[430] = 0;
   out_5897332321969546181[431] = 0;
   out_5897332321969546181[432] = 0;
   out_5897332321969546181[433] = 0;
   out_5897332321969546181[434] = 0;
   out_5897332321969546181[435] = 0;
   out_5897332321969546181[436] = 0;
   out_5897332321969546181[437] = 0;
   out_5897332321969546181[438] = 0;
   out_5897332321969546181[439] = 1.0;
   out_5897332321969546181[440] = 0;
   out_5897332321969546181[441] = 0;
   out_5897332321969546181[442] = 0;
   out_5897332321969546181[443] = 0;
   out_5897332321969546181[444] = 0;
   out_5897332321969546181[445] = 0;
   out_5897332321969546181[446] = 0;
   out_5897332321969546181[447] = 0;
   out_5897332321969546181[448] = 0;
   out_5897332321969546181[449] = 0;
   out_5897332321969546181[450] = 0;
   out_5897332321969546181[451] = 0;
   out_5897332321969546181[452] = 0;
   out_5897332321969546181[453] = 0;
   out_5897332321969546181[454] = 0;
   out_5897332321969546181[455] = 0;
   out_5897332321969546181[456] = 0;
   out_5897332321969546181[457] = 0;
   out_5897332321969546181[458] = 0;
   out_5897332321969546181[459] = 0;
   out_5897332321969546181[460] = 0;
   out_5897332321969546181[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_2188965878688889965) {
   out_2188965878688889965[0] = dt*state[7] + state[0];
   out_2188965878688889965[1] = dt*state[8] + state[1];
   out_2188965878688889965[2] = dt*state[9] + state[2];
   out_2188965878688889965[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_2188965878688889965[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_2188965878688889965[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_2188965878688889965[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_2188965878688889965[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_2188965878688889965[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_2188965878688889965[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_2188965878688889965[10] = state[10];
   out_2188965878688889965[11] = state[11];
   out_2188965878688889965[12] = state[12];
   out_2188965878688889965[13] = state[13];
   out_2188965878688889965[14] = state[14];
   out_2188965878688889965[15] = state[15];
   out_2188965878688889965[16] = state[16];
   out_2188965878688889965[17] = state[17];
   out_2188965878688889965[18] = state[18];
   out_2188965878688889965[19] = state[19];
   out_2188965878688889965[20] = state[20];
   out_2188965878688889965[21] = state[21];
}
void F_fun(double *state, double dt, double *out_5806030837490460084) {
   out_5806030837490460084[0] = 1;
   out_5806030837490460084[1] = 0;
   out_5806030837490460084[2] = 0;
   out_5806030837490460084[3] = 0;
   out_5806030837490460084[4] = 0;
   out_5806030837490460084[5] = 0;
   out_5806030837490460084[6] = dt;
   out_5806030837490460084[7] = 0;
   out_5806030837490460084[8] = 0;
   out_5806030837490460084[9] = 0;
   out_5806030837490460084[10] = 0;
   out_5806030837490460084[11] = 0;
   out_5806030837490460084[12] = 0;
   out_5806030837490460084[13] = 0;
   out_5806030837490460084[14] = 0;
   out_5806030837490460084[15] = 0;
   out_5806030837490460084[16] = 0;
   out_5806030837490460084[17] = 0;
   out_5806030837490460084[18] = 0;
   out_5806030837490460084[19] = 0;
   out_5806030837490460084[20] = 0;
   out_5806030837490460084[21] = 0;
   out_5806030837490460084[22] = 1;
   out_5806030837490460084[23] = 0;
   out_5806030837490460084[24] = 0;
   out_5806030837490460084[25] = 0;
   out_5806030837490460084[26] = 0;
   out_5806030837490460084[27] = 0;
   out_5806030837490460084[28] = dt;
   out_5806030837490460084[29] = 0;
   out_5806030837490460084[30] = 0;
   out_5806030837490460084[31] = 0;
   out_5806030837490460084[32] = 0;
   out_5806030837490460084[33] = 0;
   out_5806030837490460084[34] = 0;
   out_5806030837490460084[35] = 0;
   out_5806030837490460084[36] = 0;
   out_5806030837490460084[37] = 0;
   out_5806030837490460084[38] = 0;
   out_5806030837490460084[39] = 0;
   out_5806030837490460084[40] = 0;
   out_5806030837490460084[41] = 0;
   out_5806030837490460084[42] = 0;
   out_5806030837490460084[43] = 0;
   out_5806030837490460084[44] = 1;
   out_5806030837490460084[45] = 0;
   out_5806030837490460084[46] = 0;
   out_5806030837490460084[47] = 0;
   out_5806030837490460084[48] = 0;
   out_5806030837490460084[49] = 0;
   out_5806030837490460084[50] = dt;
   out_5806030837490460084[51] = 0;
   out_5806030837490460084[52] = 0;
   out_5806030837490460084[53] = 0;
   out_5806030837490460084[54] = 0;
   out_5806030837490460084[55] = 0;
   out_5806030837490460084[56] = 0;
   out_5806030837490460084[57] = 0;
   out_5806030837490460084[58] = 0;
   out_5806030837490460084[59] = 0;
   out_5806030837490460084[60] = 0;
   out_5806030837490460084[61] = 0;
   out_5806030837490460084[62] = 0;
   out_5806030837490460084[63] = 0;
   out_5806030837490460084[64] = 0;
   out_5806030837490460084[65] = 0;
   out_5806030837490460084[66] = 1;
   out_5806030837490460084[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5806030837490460084[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_5806030837490460084[69] = 0;
   out_5806030837490460084[70] = 0;
   out_5806030837490460084[71] = 0;
   out_5806030837490460084[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5806030837490460084[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5806030837490460084[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5806030837490460084[75] = 0;
   out_5806030837490460084[76] = 0;
   out_5806030837490460084[77] = 0;
   out_5806030837490460084[78] = 0;
   out_5806030837490460084[79] = 0;
   out_5806030837490460084[80] = 0;
   out_5806030837490460084[81] = 0;
   out_5806030837490460084[82] = 0;
   out_5806030837490460084[83] = 0;
   out_5806030837490460084[84] = 0;
   out_5806030837490460084[85] = 0;
   out_5806030837490460084[86] = 0;
   out_5806030837490460084[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5806030837490460084[88] = 1;
   out_5806030837490460084[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_5806030837490460084[90] = 0;
   out_5806030837490460084[91] = 0;
   out_5806030837490460084[92] = 0;
   out_5806030837490460084[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5806030837490460084[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5806030837490460084[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5806030837490460084[96] = 0;
   out_5806030837490460084[97] = 0;
   out_5806030837490460084[98] = 0;
   out_5806030837490460084[99] = 0;
   out_5806030837490460084[100] = 0;
   out_5806030837490460084[101] = 0;
   out_5806030837490460084[102] = 0;
   out_5806030837490460084[103] = 0;
   out_5806030837490460084[104] = 0;
   out_5806030837490460084[105] = 0;
   out_5806030837490460084[106] = 0;
   out_5806030837490460084[107] = 0;
   out_5806030837490460084[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_5806030837490460084[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_5806030837490460084[110] = 1;
   out_5806030837490460084[111] = 0;
   out_5806030837490460084[112] = 0;
   out_5806030837490460084[113] = 0;
   out_5806030837490460084[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5806030837490460084[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5806030837490460084[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5806030837490460084[117] = 0;
   out_5806030837490460084[118] = 0;
   out_5806030837490460084[119] = 0;
   out_5806030837490460084[120] = 0;
   out_5806030837490460084[121] = 0;
   out_5806030837490460084[122] = 0;
   out_5806030837490460084[123] = 0;
   out_5806030837490460084[124] = 0;
   out_5806030837490460084[125] = 0;
   out_5806030837490460084[126] = 0;
   out_5806030837490460084[127] = 0;
   out_5806030837490460084[128] = 0;
   out_5806030837490460084[129] = 0;
   out_5806030837490460084[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5806030837490460084[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_5806030837490460084[132] = 1;
   out_5806030837490460084[133] = 0;
   out_5806030837490460084[134] = 0;
   out_5806030837490460084[135] = 0;
   out_5806030837490460084[136] = 0;
   out_5806030837490460084[137] = 0;
   out_5806030837490460084[138] = 0;
   out_5806030837490460084[139] = 0;
   out_5806030837490460084[140] = 0;
   out_5806030837490460084[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5806030837490460084[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5806030837490460084[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5806030837490460084[144] = 0;
   out_5806030837490460084[145] = 0;
   out_5806030837490460084[146] = 0;
   out_5806030837490460084[147] = 0;
   out_5806030837490460084[148] = 0;
   out_5806030837490460084[149] = 0;
   out_5806030837490460084[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5806030837490460084[151] = 0;
   out_5806030837490460084[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_5806030837490460084[153] = 0;
   out_5806030837490460084[154] = 1;
   out_5806030837490460084[155] = 0;
   out_5806030837490460084[156] = 0;
   out_5806030837490460084[157] = 0;
   out_5806030837490460084[158] = 0;
   out_5806030837490460084[159] = 0;
   out_5806030837490460084[160] = 0;
   out_5806030837490460084[161] = 0;
   out_5806030837490460084[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5806030837490460084[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5806030837490460084[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5806030837490460084[165] = 0;
   out_5806030837490460084[166] = 0;
   out_5806030837490460084[167] = 0;
   out_5806030837490460084[168] = 0;
   out_5806030837490460084[169] = 0;
   out_5806030837490460084[170] = 0;
   out_5806030837490460084[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_5806030837490460084[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_5806030837490460084[173] = 0;
   out_5806030837490460084[174] = 0;
   out_5806030837490460084[175] = 0;
   out_5806030837490460084[176] = 1;
   out_5806030837490460084[177] = 0;
   out_5806030837490460084[178] = 0;
   out_5806030837490460084[179] = 0;
   out_5806030837490460084[180] = 0;
   out_5806030837490460084[181] = 0;
   out_5806030837490460084[182] = 0;
   out_5806030837490460084[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5806030837490460084[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5806030837490460084[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5806030837490460084[186] = 0;
   out_5806030837490460084[187] = 0;
   out_5806030837490460084[188] = 0;
   out_5806030837490460084[189] = 0;
   out_5806030837490460084[190] = 0;
   out_5806030837490460084[191] = 0;
   out_5806030837490460084[192] = 0;
   out_5806030837490460084[193] = 0;
   out_5806030837490460084[194] = 0;
   out_5806030837490460084[195] = 0;
   out_5806030837490460084[196] = 0;
   out_5806030837490460084[197] = 0;
   out_5806030837490460084[198] = 1;
   out_5806030837490460084[199] = 0;
   out_5806030837490460084[200] = 0;
   out_5806030837490460084[201] = 0;
   out_5806030837490460084[202] = 0;
   out_5806030837490460084[203] = 0;
   out_5806030837490460084[204] = 0;
   out_5806030837490460084[205] = 0;
   out_5806030837490460084[206] = 0;
   out_5806030837490460084[207] = 0;
   out_5806030837490460084[208] = 0;
   out_5806030837490460084[209] = 0;
   out_5806030837490460084[210] = 0;
   out_5806030837490460084[211] = 0;
   out_5806030837490460084[212] = 0;
   out_5806030837490460084[213] = 0;
   out_5806030837490460084[214] = 0;
   out_5806030837490460084[215] = 0;
   out_5806030837490460084[216] = 0;
   out_5806030837490460084[217] = 0;
   out_5806030837490460084[218] = 0;
   out_5806030837490460084[219] = 0;
   out_5806030837490460084[220] = 1;
   out_5806030837490460084[221] = 0;
   out_5806030837490460084[222] = 0;
   out_5806030837490460084[223] = 0;
   out_5806030837490460084[224] = 0;
   out_5806030837490460084[225] = 0;
   out_5806030837490460084[226] = 0;
   out_5806030837490460084[227] = 0;
   out_5806030837490460084[228] = 0;
   out_5806030837490460084[229] = 0;
   out_5806030837490460084[230] = 0;
   out_5806030837490460084[231] = 0;
   out_5806030837490460084[232] = 0;
   out_5806030837490460084[233] = 0;
   out_5806030837490460084[234] = 0;
   out_5806030837490460084[235] = 0;
   out_5806030837490460084[236] = 0;
   out_5806030837490460084[237] = 0;
   out_5806030837490460084[238] = 0;
   out_5806030837490460084[239] = 0;
   out_5806030837490460084[240] = 0;
   out_5806030837490460084[241] = 0;
   out_5806030837490460084[242] = 1;
   out_5806030837490460084[243] = 0;
   out_5806030837490460084[244] = 0;
   out_5806030837490460084[245] = 0;
   out_5806030837490460084[246] = 0;
   out_5806030837490460084[247] = 0;
   out_5806030837490460084[248] = 0;
   out_5806030837490460084[249] = 0;
   out_5806030837490460084[250] = 0;
   out_5806030837490460084[251] = 0;
   out_5806030837490460084[252] = 0;
   out_5806030837490460084[253] = 0;
   out_5806030837490460084[254] = 0;
   out_5806030837490460084[255] = 0;
   out_5806030837490460084[256] = 0;
   out_5806030837490460084[257] = 0;
   out_5806030837490460084[258] = 0;
   out_5806030837490460084[259] = 0;
   out_5806030837490460084[260] = 0;
   out_5806030837490460084[261] = 0;
   out_5806030837490460084[262] = 0;
   out_5806030837490460084[263] = 0;
   out_5806030837490460084[264] = 1;
   out_5806030837490460084[265] = 0;
   out_5806030837490460084[266] = 0;
   out_5806030837490460084[267] = 0;
   out_5806030837490460084[268] = 0;
   out_5806030837490460084[269] = 0;
   out_5806030837490460084[270] = 0;
   out_5806030837490460084[271] = 0;
   out_5806030837490460084[272] = 0;
   out_5806030837490460084[273] = 0;
   out_5806030837490460084[274] = 0;
   out_5806030837490460084[275] = 0;
   out_5806030837490460084[276] = 0;
   out_5806030837490460084[277] = 0;
   out_5806030837490460084[278] = 0;
   out_5806030837490460084[279] = 0;
   out_5806030837490460084[280] = 0;
   out_5806030837490460084[281] = 0;
   out_5806030837490460084[282] = 0;
   out_5806030837490460084[283] = 0;
   out_5806030837490460084[284] = 0;
   out_5806030837490460084[285] = 0;
   out_5806030837490460084[286] = 1;
   out_5806030837490460084[287] = 0;
   out_5806030837490460084[288] = 0;
   out_5806030837490460084[289] = 0;
   out_5806030837490460084[290] = 0;
   out_5806030837490460084[291] = 0;
   out_5806030837490460084[292] = 0;
   out_5806030837490460084[293] = 0;
   out_5806030837490460084[294] = 0;
   out_5806030837490460084[295] = 0;
   out_5806030837490460084[296] = 0;
   out_5806030837490460084[297] = 0;
   out_5806030837490460084[298] = 0;
   out_5806030837490460084[299] = 0;
   out_5806030837490460084[300] = 0;
   out_5806030837490460084[301] = 0;
   out_5806030837490460084[302] = 0;
   out_5806030837490460084[303] = 0;
   out_5806030837490460084[304] = 0;
   out_5806030837490460084[305] = 0;
   out_5806030837490460084[306] = 0;
   out_5806030837490460084[307] = 0;
   out_5806030837490460084[308] = 1;
   out_5806030837490460084[309] = 0;
   out_5806030837490460084[310] = 0;
   out_5806030837490460084[311] = 0;
   out_5806030837490460084[312] = 0;
   out_5806030837490460084[313] = 0;
   out_5806030837490460084[314] = 0;
   out_5806030837490460084[315] = 0;
   out_5806030837490460084[316] = 0;
   out_5806030837490460084[317] = 0;
   out_5806030837490460084[318] = 0;
   out_5806030837490460084[319] = 0;
   out_5806030837490460084[320] = 0;
   out_5806030837490460084[321] = 0;
   out_5806030837490460084[322] = 0;
   out_5806030837490460084[323] = 0;
   out_5806030837490460084[324] = 0;
   out_5806030837490460084[325] = 0;
   out_5806030837490460084[326] = 0;
   out_5806030837490460084[327] = 0;
   out_5806030837490460084[328] = 0;
   out_5806030837490460084[329] = 0;
   out_5806030837490460084[330] = 1;
   out_5806030837490460084[331] = 0;
   out_5806030837490460084[332] = 0;
   out_5806030837490460084[333] = 0;
   out_5806030837490460084[334] = 0;
   out_5806030837490460084[335] = 0;
   out_5806030837490460084[336] = 0;
   out_5806030837490460084[337] = 0;
   out_5806030837490460084[338] = 0;
   out_5806030837490460084[339] = 0;
   out_5806030837490460084[340] = 0;
   out_5806030837490460084[341] = 0;
   out_5806030837490460084[342] = 0;
   out_5806030837490460084[343] = 0;
   out_5806030837490460084[344] = 0;
   out_5806030837490460084[345] = 0;
   out_5806030837490460084[346] = 0;
   out_5806030837490460084[347] = 0;
   out_5806030837490460084[348] = 0;
   out_5806030837490460084[349] = 0;
   out_5806030837490460084[350] = 0;
   out_5806030837490460084[351] = 0;
   out_5806030837490460084[352] = 1;
   out_5806030837490460084[353] = 0;
   out_5806030837490460084[354] = 0;
   out_5806030837490460084[355] = 0;
   out_5806030837490460084[356] = 0;
   out_5806030837490460084[357] = 0;
   out_5806030837490460084[358] = 0;
   out_5806030837490460084[359] = 0;
   out_5806030837490460084[360] = 0;
   out_5806030837490460084[361] = 0;
   out_5806030837490460084[362] = 0;
   out_5806030837490460084[363] = 0;
   out_5806030837490460084[364] = 0;
   out_5806030837490460084[365] = 0;
   out_5806030837490460084[366] = 0;
   out_5806030837490460084[367] = 0;
   out_5806030837490460084[368] = 0;
   out_5806030837490460084[369] = 0;
   out_5806030837490460084[370] = 0;
   out_5806030837490460084[371] = 0;
   out_5806030837490460084[372] = 0;
   out_5806030837490460084[373] = 0;
   out_5806030837490460084[374] = 1;
   out_5806030837490460084[375] = 0;
   out_5806030837490460084[376] = 0;
   out_5806030837490460084[377] = 0;
   out_5806030837490460084[378] = 0;
   out_5806030837490460084[379] = 0;
   out_5806030837490460084[380] = 0;
   out_5806030837490460084[381] = 0;
   out_5806030837490460084[382] = 0;
   out_5806030837490460084[383] = 0;
   out_5806030837490460084[384] = 0;
   out_5806030837490460084[385] = 0;
   out_5806030837490460084[386] = 0;
   out_5806030837490460084[387] = 0;
   out_5806030837490460084[388] = 0;
   out_5806030837490460084[389] = 0;
   out_5806030837490460084[390] = 0;
   out_5806030837490460084[391] = 0;
   out_5806030837490460084[392] = 0;
   out_5806030837490460084[393] = 0;
   out_5806030837490460084[394] = 0;
   out_5806030837490460084[395] = 0;
   out_5806030837490460084[396] = 1;
   out_5806030837490460084[397] = 0;
   out_5806030837490460084[398] = 0;
   out_5806030837490460084[399] = 0;
   out_5806030837490460084[400] = 0;
   out_5806030837490460084[401] = 0;
   out_5806030837490460084[402] = 0;
   out_5806030837490460084[403] = 0;
   out_5806030837490460084[404] = 0;
   out_5806030837490460084[405] = 0;
   out_5806030837490460084[406] = 0;
   out_5806030837490460084[407] = 0;
   out_5806030837490460084[408] = 0;
   out_5806030837490460084[409] = 0;
   out_5806030837490460084[410] = 0;
   out_5806030837490460084[411] = 0;
   out_5806030837490460084[412] = 0;
   out_5806030837490460084[413] = 0;
   out_5806030837490460084[414] = 0;
   out_5806030837490460084[415] = 0;
   out_5806030837490460084[416] = 0;
   out_5806030837490460084[417] = 0;
   out_5806030837490460084[418] = 1;
   out_5806030837490460084[419] = 0;
   out_5806030837490460084[420] = 0;
   out_5806030837490460084[421] = 0;
   out_5806030837490460084[422] = 0;
   out_5806030837490460084[423] = 0;
   out_5806030837490460084[424] = 0;
   out_5806030837490460084[425] = 0;
   out_5806030837490460084[426] = 0;
   out_5806030837490460084[427] = 0;
   out_5806030837490460084[428] = 0;
   out_5806030837490460084[429] = 0;
   out_5806030837490460084[430] = 0;
   out_5806030837490460084[431] = 0;
   out_5806030837490460084[432] = 0;
   out_5806030837490460084[433] = 0;
   out_5806030837490460084[434] = 0;
   out_5806030837490460084[435] = 0;
   out_5806030837490460084[436] = 0;
   out_5806030837490460084[437] = 0;
   out_5806030837490460084[438] = 0;
   out_5806030837490460084[439] = 0;
   out_5806030837490460084[440] = 1;
}
void h_4(double *state, double *unused, double *out_4737311081750203383) {
   out_4737311081750203383[0] = state[10] + state[13];
   out_4737311081750203383[1] = state[11] + state[14];
   out_4737311081750203383[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_7432831630702694888) {
   out_7432831630702694888[0] = 0;
   out_7432831630702694888[1] = 0;
   out_7432831630702694888[2] = 0;
   out_7432831630702694888[3] = 0;
   out_7432831630702694888[4] = 0;
   out_7432831630702694888[5] = 0;
   out_7432831630702694888[6] = 0;
   out_7432831630702694888[7] = 0;
   out_7432831630702694888[8] = 0;
   out_7432831630702694888[9] = 0;
   out_7432831630702694888[10] = 1;
   out_7432831630702694888[11] = 0;
   out_7432831630702694888[12] = 0;
   out_7432831630702694888[13] = 1;
   out_7432831630702694888[14] = 0;
   out_7432831630702694888[15] = 0;
   out_7432831630702694888[16] = 0;
   out_7432831630702694888[17] = 0;
   out_7432831630702694888[18] = 0;
   out_7432831630702694888[19] = 0;
   out_7432831630702694888[20] = 0;
   out_7432831630702694888[21] = 0;
   out_7432831630702694888[22] = 0;
   out_7432831630702694888[23] = 0;
   out_7432831630702694888[24] = 0;
   out_7432831630702694888[25] = 0;
   out_7432831630702694888[26] = 0;
   out_7432831630702694888[27] = 0;
   out_7432831630702694888[28] = 0;
   out_7432831630702694888[29] = 0;
   out_7432831630702694888[30] = 0;
   out_7432831630702694888[31] = 0;
   out_7432831630702694888[32] = 0;
   out_7432831630702694888[33] = 1;
   out_7432831630702694888[34] = 0;
   out_7432831630702694888[35] = 0;
   out_7432831630702694888[36] = 1;
   out_7432831630702694888[37] = 0;
   out_7432831630702694888[38] = 0;
   out_7432831630702694888[39] = 0;
   out_7432831630702694888[40] = 0;
   out_7432831630702694888[41] = 0;
   out_7432831630702694888[42] = 0;
   out_7432831630702694888[43] = 0;
   out_7432831630702694888[44] = 0;
   out_7432831630702694888[45] = 0;
   out_7432831630702694888[46] = 0;
   out_7432831630702694888[47] = 0;
   out_7432831630702694888[48] = 0;
   out_7432831630702694888[49] = 0;
   out_7432831630702694888[50] = 0;
   out_7432831630702694888[51] = 0;
   out_7432831630702694888[52] = 0;
   out_7432831630702694888[53] = 0;
   out_7432831630702694888[54] = 0;
   out_7432831630702694888[55] = 0;
   out_7432831630702694888[56] = 1;
   out_7432831630702694888[57] = 0;
   out_7432831630702694888[58] = 0;
   out_7432831630702694888[59] = 1;
   out_7432831630702694888[60] = 0;
   out_7432831630702694888[61] = 0;
   out_7432831630702694888[62] = 0;
   out_7432831630702694888[63] = 0;
   out_7432831630702694888[64] = 0;
   out_7432831630702694888[65] = 0;
}
void h_9(double *state, double *unused, double *out_8486532404377433930) {
   out_8486532404377433930[0] = state[10];
   out_8486532404377433930[1] = state[11];
   out_8486532404377433930[2] = state[12];
}
void H_9(double *state, double *unused, double *out_3726693507742409258) {
   out_3726693507742409258[0] = 0;
   out_3726693507742409258[1] = 0;
   out_3726693507742409258[2] = 0;
   out_3726693507742409258[3] = 0;
   out_3726693507742409258[4] = 0;
   out_3726693507742409258[5] = 0;
   out_3726693507742409258[6] = 0;
   out_3726693507742409258[7] = 0;
   out_3726693507742409258[8] = 0;
   out_3726693507742409258[9] = 0;
   out_3726693507742409258[10] = 1;
   out_3726693507742409258[11] = 0;
   out_3726693507742409258[12] = 0;
   out_3726693507742409258[13] = 0;
   out_3726693507742409258[14] = 0;
   out_3726693507742409258[15] = 0;
   out_3726693507742409258[16] = 0;
   out_3726693507742409258[17] = 0;
   out_3726693507742409258[18] = 0;
   out_3726693507742409258[19] = 0;
   out_3726693507742409258[20] = 0;
   out_3726693507742409258[21] = 0;
   out_3726693507742409258[22] = 0;
   out_3726693507742409258[23] = 0;
   out_3726693507742409258[24] = 0;
   out_3726693507742409258[25] = 0;
   out_3726693507742409258[26] = 0;
   out_3726693507742409258[27] = 0;
   out_3726693507742409258[28] = 0;
   out_3726693507742409258[29] = 0;
   out_3726693507742409258[30] = 0;
   out_3726693507742409258[31] = 0;
   out_3726693507742409258[32] = 0;
   out_3726693507742409258[33] = 1;
   out_3726693507742409258[34] = 0;
   out_3726693507742409258[35] = 0;
   out_3726693507742409258[36] = 0;
   out_3726693507742409258[37] = 0;
   out_3726693507742409258[38] = 0;
   out_3726693507742409258[39] = 0;
   out_3726693507742409258[40] = 0;
   out_3726693507742409258[41] = 0;
   out_3726693507742409258[42] = 0;
   out_3726693507742409258[43] = 0;
   out_3726693507742409258[44] = 0;
   out_3726693507742409258[45] = 0;
   out_3726693507742409258[46] = 0;
   out_3726693507742409258[47] = 0;
   out_3726693507742409258[48] = 0;
   out_3726693507742409258[49] = 0;
   out_3726693507742409258[50] = 0;
   out_3726693507742409258[51] = 0;
   out_3726693507742409258[52] = 0;
   out_3726693507742409258[53] = 0;
   out_3726693507742409258[54] = 0;
   out_3726693507742409258[55] = 0;
   out_3726693507742409258[56] = 1;
   out_3726693507742409258[57] = 0;
   out_3726693507742409258[58] = 0;
   out_3726693507742409258[59] = 0;
   out_3726693507742409258[60] = 0;
   out_3726693507742409258[61] = 0;
   out_3726693507742409258[62] = 0;
   out_3726693507742409258[63] = 0;
   out_3726693507742409258[64] = 0;
   out_3726693507742409258[65] = 0;
}
void h_10(double *state, double *unused, double *out_6040759682964891299) {
   out_6040759682964891299[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_6040759682964891299[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_6040759682964891299[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_2189165318271582311) {
   out_2189165318271582311[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2189165318271582311[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_2189165318271582311[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_2189165318271582311[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2189165318271582311[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2189165318271582311[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2189165318271582311[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2189165318271582311[7] = 0;
   out_2189165318271582311[8] = 0;
   out_2189165318271582311[9] = 0;
   out_2189165318271582311[10] = 0;
   out_2189165318271582311[11] = 0;
   out_2189165318271582311[12] = 0;
   out_2189165318271582311[13] = 0;
   out_2189165318271582311[14] = 0;
   out_2189165318271582311[15] = 0;
   out_2189165318271582311[16] = 1;
   out_2189165318271582311[17] = 0;
   out_2189165318271582311[18] = 0;
   out_2189165318271582311[19] = 1;
   out_2189165318271582311[20] = 0;
   out_2189165318271582311[21] = 0;
   out_2189165318271582311[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_2189165318271582311[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2189165318271582311[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_2189165318271582311[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2189165318271582311[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2189165318271582311[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2189165318271582311[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2189165318271582311[29] = 0;
   out_2189165318271582311[30] = 0;
   out_2189165318271582311[31] = 0;
   out_2189165318271582311[32] = 0;
   out_2189165318271582311[33] = 0;
   out_2189165318271582311[34] = 0;
   out_2189165318271582311[35] = 0;
   out_2189165318271582311[36] = 0;
   out_2189165318271582311[37] = 0;
   out_2189165318271582311[38] = 0;
   out_2189165318271582311[39] = 1;
   out_2189165318271582311[40] = 0;
   out_2189165318271582311[41] = 0;
   out_2189165318271582311[42] = 1;
   out_2189165318271582311[43] = 0;
   out_2189165318271582311[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_2189165318271582311[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_2189165318271582311[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2189165318271582311[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2189165318271582311[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2189165318271582311[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2189165318271582311[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2189165318271582311[51] = 0;
   out_2189165318271582311[52] = 0;
   out_2189165318271582311[53] = 0;
   out_2189165318271582311[54] = 0;
   out_2189165318271582311[55] = 0;
   out_2189165318271582311[56] = 0;
   out_2189165318271582311[57] = 0;
   out_2189165318271582311[58] = 0;
   out_2189165318271582311[59] = 0;
   out_2189165318271582311[60] = 0;
   out_2189165318271582311[61] = 0;
   out_2189165318271582311[62] = 1;
   out_2189165318271582311[63] = 0;
   out_2189165318271582311[64] = 0;
   out_2189165318271582311[65] = 1;
}
void h_12(double *state, double *unused, double *out_1727104390090824982) {
   out_1727104390090824982[0] = state[0];
   out_1727104390090824982[1] = state[1];
   out_1727104390090824982[2] = state[2];
}
void H_12(double *state, double *unused, double *out_1051573253659961892) {
   out_1051573253659961892[0] = 1;
   out_1051573253659961892[1] = 0;
   out_1051573253659961892[2] = 0;
   out_1051573253659961892[3] = 0;
   out_1051573253659961892[4] = 0;
   out_1051573253659961892[5] = 0;
   out_1051573253659961892[6] = 0;
   out_1051573253659961892[7] = 0;
   out_1051573253659961892[8] = 0;
   out_1051573253659961892[9] = 0;
   out_1051573253659961892[10] = 0;
   out_1051573253659961892[11] = 0;
   out_1051573253659961892[12] = 0;
   out_1051573253659961892[13] = 0;
   out_1051573253659961892[14] = 0;
   out_1051573253659961892[15] = 0;
   out_1051573253659961892[16] = 0;
   out_1051573253659961892[17] = 0;
   out_1051573253659961892[18] = 0;
   out_1051573253659961892[19] = 0;
   out_1051573253659961892[20] = 0;
   out_1051573253659961892[21] = 0;
   out_1051573253659961892[22] = 0;
   out_1051573253659961892[23] = 1;
   out_1051573253659961892[24] = 0;
   out_1051573253659961892[25] = 0;
   out_1051573253659961892[26] = 0;
   out_1051573253659961892[27] = 0;
   out_1051573253659961892[28] = 0;
   out_1051573253659961892[29] = 0;
   out_1051573253659961892[30] = 0;
   out_1051573253659961892[31] = 0;
   out_1051573253659961892[32] = 0;
   out_1051573253659961892[33] = 0;
   out_1051573253659961892[34] = 0;
   out_1051573253659961892[35] = 0;
   out_1051573253659961892[36] = 0;
   out_1051573253659961892[37] = 0;
   out_1051573253659961892[38] = 0;
   out_1051573253659961892[39] = 0;
   out_1051573253659961892[40] = 0;
   out_1051573253659961892[41] = 0;
   out_1051573253659961892[42] = 0;
   out_1051573253659961892[43] = 0;
   out_1051573253659961892[44] = 0;
   out_1051573253659961892[45] = 0;
   out_1051573253659961892[46] = 1;
   out_1051573253659961892[47] = 0;
   out_1051573253659961892[48] = 0;
   out_1051573253659961892[49] = 0;
   out_1051573253659961892[50] = 0;
   out_1051573253659961892[51] = 0;
   out_1051573253659961892[52] = 0;
   out_1051573253659961892[53] = 0;
   out_1051573253659961892[54] = 0;
   out_1051573253659961892[55] = 0;
   out_1051573253659961892[56] = 0;
   out_1051573253659961892[57] = 0;
   out_1051573253659961892[58] = 0;
   out_1051573253659961892[59] = 0;
   out_1051573253659961892[60] = 0;
   out_1051573253659961892[61] = 0;
   out_1051573253659961892[62] = 0;
   out_1051573253659961892[63] = 0;
   out_1051573253659961892[64] = 0;
   out_1051573253659961892[65] = 0;
}
void h_31(double *state, double *unused, double *out_8980951854437294142) {
   out_8980951854437294142[0] = state[7];
   out_8980951854437294142[1] = state[8];
   out_8980951854437294142[2] = state[9];
}
void H_31(double *state, double *unused, double *out_7647250385634249352) {
   out_7647250385634249352[0] = 0;
   out_7647250385634249352[1] = 0;
   out_7647250385634249352[2] = 0;
   out_7647250385634249352[3] = 0;
   out_7647250385634249352[4] = 0;
   out_7647250385634249352[5] = 0;
   out_7647250385634249352[6] = 0;
   out_7647250385634249352[7] = 1;
   out_7647250385634249352[8] = 0;
   out_7647250385634249352[9] = 0;
   out_7647250385634249352[10] = 0;
   out_7647250385634249352[11] = 0;
   out_7647250385634249352[12] = 0;
   out_7647250385634249352[13] = 0;
   out_7647250385634249352[14] = 0;
   out_7647250385634249352[15] = 0;
   out_7647250385634249352[16] = 0;
   out_7647250385634249352[17] = 0;
   out_7647250385634249352[18] = 0;
   out_7647250385634249352[19] = 0;
   out_7647250385634249352[20] = 0;
   out_7647250385634249352[21] = 0;
   out_7647250385634249352[22] = 0;
   out_7647250385634249352[23] = 0;
   out_7647250385634249352[24] = 0;
   out_7647250385634249352[25] = 0;
   out_7647250385634249352[26] = 0;
   out_7647250385634249352[27] = 0;
   out_7647250385634249352[28] = 0;
   out_7647250385634249352[29] = 0;
   out_7647250385634249352[30] = 1;
   out_7647250385634249352[31] = 0;
   out_7647250385634249352[32] = 0;
   out_7647250385634249352[33] = 0;
   out_7647250385634249352[34] = 0;
   out_7647250385634249352[35] = 0;
   out_7647250385634249352[36] = 0;
   out_7647250385634249352[37] = 0;
   out_7647250385634249352[38] = 0;
   out_7647250385634249352[39] = 0;
   out_7647250385634249352[40] = 0;
   out_7647250385634249352[41] = 0;
   out_7647250385634249352[42] = 0;
   out_7647250385634249352[43] = 0;
   out_7647250385634249352[44] = 0;
   out_7647250385634249352[45] = 0;
   out_7647250385634249352[46] = 0;
   out_7647250385634249352[47] = 0;
   out_7647250385634249352[48] = 0;
   out_7647250385634249352[49] = 0;
   out_7647250385634249352[50] = 0;
   out_7647250385634249352[51] = 0;
   out_7647250385634249352[52] = 0;
   out_7647250385634249352[53] = 1;
   out_7647250385634249352[54] = 0;
   out_7647250385634249352[55] = 0;
   out_7647250385634249352[56] = 0;
   out_7647250385634249352[57] = 0;
   out_7647250385634249352[58] = 0;
   out_7647250385634249352[59] = 0;
   out_7647250385634249352[60] = 0;
   out_7647250385634249352[61] = 0;
   out_7647250385634249352[62] = 0;
   out_7647250385634249352[63] = 0;
   out_7647250385634249352[64] = 0;
   out_7647250385634249352[65] = 0;
}
void h_32(double *state, double *unused, double *out_2259329213550024947) {
   out_2259329213550024947[0] = state[3];
   out_2259329213550024947[1] = state[4];
   out_2259329213550024947[2] = state[5];
   out_2259329213550024947[3] = state[6];
}
void H_32(double *state, double *unused, double *out_7913012265226847768) {
   out_7913012265226847768[0] = 0;
   out_7913012265226847768[1] = 0;
   out_7913012265226847768[2] = 0;
   out_7913012265226847768[3] = 1;
   out_7913012265226847768[4] = 0;
   out_7913012265226847768[5] = 0;
   out_7913012265226847768[6] = 0;
   out_7913012265226847768[7] = 0;
   out_7913012265226847768[8] = 0;
   out_7913012265226847768[9] = 0;
   out_7913012265226847768[10] = 0;
   out_7913012265226847768[11] = 0;
   out_7913012265226847768[12] = 0;
   out_7913012265226847768[13] = 0;
   out_7913012265226847768[14] = 0;
   out_7913012265226847768[15] = 0;
   out_7913012265226847768[16] = 0;
   out_7913012265226847768[17] = 0;
   out_7913012265226847768[18] = 0;
   out_7913012265226847768[19] = 0;
   out_7913012265226847768[20] = 0;
   out_7913012265226847768[21] = 0;
   out_7913012265226847768[22] = 0;
   out_7913012265226847768[23] = 0;
   out_7913012265226847768[24] = 0;
   out_7913012265226847768[25] = 0;
   out_7913012265226847768[26] = 1;
   out_7913012265226847768[27] = 0;
   out_7913012265226847768[28] = 0;
   out_7913012265226847768[29] = 0;
   out_7913012265226847768[30] = 0;
   out_7913012265226847768[31] = 0;
   out_7913012265226847768[32] = 0;
   out_7913012265226847768[33] = 0;
   out_7913012265226847768[34] = 0;
   out_7913012265226847768[35] = 0;
   out_7913012265226847768[36] = 0;
   out_7913012265226847768[37] = 0;
   out_7913012265226847768[38] = 0;
   out_7913012265226847768[39] = 0;
   out_7913012265226847768[40] = 0;
   out_7913012265226847768[41] = 0;
   out_7913012265226847768[42] = 0;
   out_7913012265226847768[43] = 0;
   out_7913012265226847768[44] = 0;
   out_7913012265226847768[45] = 0;
   out_7913012265226847768[46] = 0;
   out_7913012265226847768[47] = 0;
   out_7913012265226847768[48] = 0;
   out_7913012265226847768[49] = 1;
   out_7913012265226847768[50] = 0;
   out_7913012265226847768[51] = 0;
   out_7913012265226847768[52] = 0;
   out_7913012265226847768[53] = 0;
   out_7913012265226847768[54] = 0;
   out_7913012265226847768[55] = 0;
   out_7913012265226847768[56] = 0;
   out_7913012265226847768[57] = 0;
   out_7913012265226847768[58] = 0;
   out_7913012265226847768[59] = 0;
   out_7913012265226847768[60] = 0;
   out_7913012265226847768[61] = 0;
   out_7913012265226847768[62] = 0;
   out_7913012265226847768[63] = 0;
   out_7913012265226847768[64] = 0;
   out_7913012265226847768[65] = 0;
   out_7913012265226847768[66] = 0;
   out_7913012265226847768[67] = 0;
   out_7913012265226847768[68] = 0;
   out_7913012265226847768[69] = 0;
   out_7913012265226847768[70] = 0;
   out_7913012265226847768[71] = 0;
   out_7913012265226847768[72] = 1;
   out_7913012265226847768[73] = 0;
   out_7913012265226847768[74] = 0;
   out_7913012265226847768[75] = 0;
   out_7913012265226847768[76] = 0;
   out_7913012265226847768[77] = 0;
   out_7913012265226847768[78] = 0;
   out_7913012265226847768[79] = 0;
   out_7913012265226847768[80] = 0;
   out_7913012265226847768[81] = 0;
   out_7913012265226847768[82] = 0;
   out_7913012265226847768[83] = 0;
   out_7913012265226847768[84] = 0;
   out_7913012265226847768[85] = 0;
   out_7913012265226847768[86] = 0;
   out_7913012265226847768[87] = 0;
}
void h_13(double *state, double *unused, double *out_5842574740742326373) {
   out_5842574740742326373[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_5842574740742326373[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_5842574740742326373[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_907251490049581865) {
   out_907251490049581865[0] = 0;
   out_907251490049581865[1] = 0;
   out_907251490049581865[2] = 0;
   out_907251490049581865[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_907251490049581865[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_907251490049581865[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_907251490049581865[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_907251490049581865[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_907251490049581865[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_907251490049581865[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_907251490049581865[10] = 0;
   out_907251490049581865[11] = 0;
   out_907251490049581865[12] = 0;
   out_907251490049581865[13] = 0;
   out_907251490049581865[14] = 0;
   out_907251490049581865[15] = 0;
   out_907251490049581865[16] = 0;
   out_907251490049581865[17] = 0;
   out_907251490049581865[18] = 0;
   out_907251490049581865[19] = 0;
   out_907251490049581865[20] = 0;
   out_907251490049581865[21] = 0;
   out_907251490049581865[22] = 0;
   out_907251490049581865[23] = 0;
   out_907251490049581865[24] = 0;
   out_907251490049581865[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_907251490049581865[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_907251490049581865[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_907251490049581865[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_907251490049581865[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_907251490049581865[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_907251490049581865[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_907251490049581865[32] = 0;
   out_907251490049581865[33] = 0;
   out_907251490049581865[34] = 0;
   out_907251490049581865[35] = 0;
   out_907251490049581865[36] = 0;
   out_907251490049581865[37] = 0;
   out_907251490049581865[38] = 0;
   out_907251490049581865[39] = 0;
   out_907251490049581865[40] = 0;
   out_907251490049581865[41] = 0;
   out_907251490049581865[42] = 0;
   out_907251490049581865[43] = 0;
   out_907251490049581865[44] = 0;
   out_907251490049581865[45] = 0;
   out_907251490049581865[46] = 0;
   out_907251490049581865[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_907251490049581865[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_907251490049581865[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_907251490049581865[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_907251490049581865[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_907251490049581865[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_907251490049581865[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_907251490049581865[54] = 0;
   out_907251490049581865[55] = 0;
   out_907251490049581865[56] = 0;
   out_907251490049581865[57] = 0;
   out_907251490049581865[58] = 0;
   out_907251490049581865[59] = 0;
   out_907251490049581865[60] = 0;
   out_907251490049581865[61] = 0;
   out_907251490049581865[62] = 0;
   out_907251490049581865[63] = 0;
   out_907251490049581865[64] = 0;
   out_907251490049581865[65] = 0;
}
void h_14(double *state, double *unused, double *out_8486532404377433930) {
   out_8486532404377433930[0] = state[10];
   out_8486532404377433930[1] = state[11];
   out_8486532404377433930[2] = state[12];
}
void H_14(double *state, double *unused, double *out_3726693507742409258) {
   out_3726693507742409258[0] = 0;
   out_3726693507742409258[1] = 0;
   out_3726693507742409258[2] = 0;
   out_3726693507742409258[3] = 0;
   out_3726693507742409258[4] = 0;
   out_3726693507742409258[5] = 0;
   out_3726693507742409258[6] = 0;
   out_3726693507742409258[7] = 0;
   out_3726693507742409258[8] = 0;
   out_3726693507742409258[9] = 0;
   out_3726693507742409258[10] = 1;
   out_3726693507742409258[11] = 0;
   out_3726693507742409258[12] = 0;
   out_3726693507742409258[13] = 0;
   out_3726693507742409258[14] = 0;
   out_3726693507742409258[15] = 0;
   out_3726693507742409258[16] = 0;
   out_3726693507742409258[17] = 0;
   out_3726693507742409258[18] = 0;
   out_3726693507742409258[19] = 0;
   out_3726693507742409258[20] = 0;
   out_3726693507742409258[21] = 0;
   out_3726693507742409258[22] = 0;
   out_3726693507742409258[23] = 0;
   out_3726693507742409258[24] = 0;
   out_3726693507742409258[25] = 0;
   out_3726693507742409258[26] = 0;
   out_3726693507742409258[27] = 0;
   out_3726693507742409258[28] = 0;
   out_3726693507742409258[29] = 0;
   out_3726693507742409258[30] = 0;
   out_3726693507742409258[31] = 0;
   out_3726693507742409258[32] = 0;
   out_3726693507742409258[33] = 1;
   out_3726693507742409258[34] = 0;
   out_3726693507742409258[35] = 0;
   out_3726693507742409258[36] = 0;
   out_3726693507742409258[37] = 0;
   out_3726693507742409258[38] = 0;
   out_3726693507742409258[39] = 0;
   out_3726693507742409258[40] = 0;
   out_3726693507742409258[41] = 0;
   out_3726693507742409258[42] = 0;
   out_3726693507742409258[43] = 0;
   out_3726693507742409258[44] = 0;
   out_3726693507742409258[45] = 0;
   out_3726693507742409258[46] = 0;
   out_3726693507742409258[47] = 0;
   out_3726693507742409258[48] = 0;
   out_3726693507742409258[49] = 0;
   out_3726693507742409258[50] = 0;
   out_3726693507742409258[51] = 0;
   out_3726693507742409258[52] = 0;
   out_3726693507742409258[53] = 0;
   out_3726693507742409258[54] = 0;
   out_3726693507742409258[55] = 0;
   out_3726693507742409258[56] = 1;
   out_3726693507742409258[57] = 0;
   out_3726693507742409258[58] = 0;
   out_3726693507742409258[59] = 0;
   out_3726693507742409258[60] = 0;
   out_3726693507742409258[61] = 0;
   out_3726693507742409258[62] = 0;
   out_3726693507742409258[63] = 0;
   out_3726693507742409258[64] = 0;
   out_3726693507742409258[65] = 0;
}
void h_33(double *state, double *unused, double *out_813871974734872980) {
   out_813871974734872980[0] = state[16];
   out_813871974734872980[1] = state[17];
   out_813871974734872980[2] = state[18];
}
void H_33(double *state, double *unused, double *out_2549335907639465077) {
   out_2549335907639465077[0] = 0;
   out_2549335907639465077[1] = 0;
   out_2549335907639465077[2] = 0;
   out_2549335907639465077[3] = 0;
   out_2549335907639465077[4] = 0;
   out_2549335907639465077[5] = 0;
   out_2549335907639465077[6] = 0;
   out_2549335907639465077[7] = 0;
   out_2549335907639465077[8] = 0;
   out_2549335907639465077[9] = 0;
   out_2549335907639465077[10] = 0;
   out_2549335907639465077[11] = 0;
   out_2549335907639465077[12] = 0;
   out_2549335907639465077[13] = 0;
   out_2549335907639465077[14] = 0;
   out_2549335907639465077[15] = 0;
   out_2549335907639465077[16] = 1;
   out_2549335907639465077[17] = 0;
   out_2549335907639465077[18] = 0;
   out_2549335907639465077[19] = 0;
   out_2549335907639465077[20] = 0;
   out_2549335907639465077[21] = 0;
   out_2549335907639465077[22] = 0;
   out_2549335907639465077[23] = 0;
   out_2549335907639465077[24] = 0;
   out_2549335907639465077[25] = 0;
   out_2549335907639465077[26] = 0;
   out_2549335907639465077[27] = 0;
   out_2549335907639465077[28] = 0;
   out_2549335907639465077[29] = 0;
   out_2549335907639465077[30] = 0;
   out_2549335907639465077[31] = 0;
   out_2549335907639465077[32] = 0;
   out_2549335907639465077[33] = 0;
   out_2549335907639465077[34] = 0;
   out_2549335907639465077[35] = 0;
   out_2549335907639465077[36] = 0;
   out_2549335907639465077[37] = 0;
   out_2549335907639465077[38] = 0;
   out_2549335907639465077[39] = 1;
   out_2549335907639465077[40] = 0;
   out_2549335907639465077[41] = 0;
   out_2549335907639465077[42] = 0;
   out_2549335907639465077[43] = 0;
   out_2549335907639465077[44] = 0;
   out_2549335907639465077[45] = 0;
   out_2549335907639465077[46] = 0;
   out_2549335907639465077[47] = 0;
   out_2549335907639465077[48] = 0;
   out_2549335907639465077[49] = 0;
   out_2549335907639465077[50] = 0;
   out_2549335907639465077[51] = 0;
   out_2549335907639465077[52] = 0;
   out_2549335907639465077[53] = 0;
   out_2549335907639465077[54] = 0;
   out_2549335907639465077[55] = 0;
   out_2549335907639465077[56] = 0;
   out_2549335907639465077[57] = 0;
   out_2549335907639465077[58] = 0;
   out_2549335907639465077[59] = 0;
   out_2549335907639465077[60] = 0;
   out_2549335907639465077[61] = 0;
   out_2549335907639465077[62] = 1;
   out_2549335907639465077[63] = 0;
   out_2549335907639465077[64] = 0;
   out_2549335907639465077[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_6784214534126845801) {
  H(in_vec, out_6784214534126845801);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_3844476456932584636) {
  err_fun(nom_x, delta_x, out_3844476456932584636);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_6720843841751766539) {
  inv_err_fun(nom_x, true_x, out_6720843841751766539);
}
void live_H_mod_fun(double *state, double *out_5897332321969546181) {
  H_mod_fun(state, out_5897332321969546181);
}
void live_f_fun(double *state, double dt, double *out_2188965878688889965) {
  f_fun(state,  dt, out_2188965878688889965);
}
void live_F_fun(double *state, double dt, double *out_5806030837490460084) {
  F_fun(state,  dt, out_5806030837490460084);
}
void live_h_4(double *state, double *unused, double *out_4737311081750203383) {
  h_4(state, unused, out_4737311081750203383);
}
void live_H_4(double *state, double *unused, double *out_7432831630702694888) {
  H_4(state, unused, out_7432831630702694888);
}
void live_h_9(double *state, double *unused, double *out_8486532404377433930) {
  h_9(state, unused, out_8486532404377433930);
}
void live_H_9(double *state, double *unused, double *out_3726693507742409258) {
  H_9(state, unused, out_3726693507742409258);
}
void live_h_10(double *state, double *unused, double *out_6040759682964891299) {
  h_10(state, unused, out_6040759682964891299);
}
void live_H_10(double *state, double *unused, double *out_2189165318271582311) {
  H_10(state, unused, out_2189165318271582311);
}
void live_h_12(double *state, double *unused, double *out_1727104390090824982) {
  h_12(state, unused, out_1727104390090824982);
}
void live_H_12(double *state, double *unused, double *out_1051573253659961892) {
  H_12(state, unused, out_1051573253659961892);
}
void live_h_31(double *state, double *unused, double *out_8980951854437294142) {
  h_31(state, unused, out_8980951854437294142);
}
void live_H_31(double *state, double *unused, double *out_7647250385634249352) {
  H_31(state, unused, out_7647250385634249352);
}
void live_h_32(double *state, double *unused, double *out_2259329213550024947) {
  h_32(state, unused, out_2259329213550024947);
}
void live_H_32(double *state, double *unused, double *out_7913012265226847768) {
  H_32(state, unused, out_7913012265226847768);
}
void live_h_13(double *state, double *unused, double *out_5842574740742326373) {
  h_13(state, unused, out_5842574740742326373);
}
void live_H_13(double *state, double *unused, double *out_907251490049581865) {
  H_13(state, unused, out_907251490049581865);
}
void live_h_14(double *state, double *unused, double *out_8486532404377433930) {
  h_14(state, unused, out_8486532404377433930);
}
void live_H_14(double *state, double *unused, double *out_3726693507742409258) {
  H_14(state, unused, out_3726693507742409258);
}
void live_h_33(double *state, double *unused, double *out_813871974734872980) {
  h_33(state, unused, out_813871974734872980);
}
void live_H_33(double *state, double *unused, double *out_2549335907639465077) {
  H_33(state, unused, out_2549335907639465077);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
